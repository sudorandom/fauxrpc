package celfakeit_test

import (
	"testing"

	"github.com/google/cel-go/cel"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"github.com/sudorandom/fauxrpc/celfakeit"
)

func TestFakeit(t *testing.T) {
	testCases := []struct {
		name        string
		cel         string
		expectedErr error
	}{
		{name: "check setup", cel: `true`},
		{name: "fake_file_extension", cel: `fake_file_extension()`},
		{name: "fake_product_name", cel: `fake_product_name()`},
		{name: "fake_product_description", cel: `fake_product_description()`},
		{name: "fake_product_category", cel: `fake_product_category()`},
		{name: "fake_product_feature", cel: `fake_product_feature()`},
		{name: "fake_product_material", cel: `fake_product_material()`},
		{name: "fake_product_upc", cel: `fake_product_upc()`},
		{name: "fake_product_audience", cel: `fake_product_audience()`},
		{name: "fake_product_dimension", cel: `fake_product_dimension()`},
		{name: "fake_product_usecase", cel: `fake_product_usecase()`},
		{name: "fake_product_benefit", cel: `fake_product_benefit()`},
		{name: "fake_product_suffix", cel: `fake_product_suffix()`},
		{name: "fake_name", cel: `fake_name()`},
		{name: "fake_name_prefix", cel: `fake_name_prefix()`},
		{name: "fake_name_suffix", cel: `fake_name_suffix()`},
		{name: "fake_first_name", cel: `fake_first_name()`},
		{name: "fake_middle_name", cel: `fake_middle_name()`},
		{name: "fake_last_name", cel: `fake_last_name()`},
		{name: "fake_gender", cel: `fake_gender()`},
		{name: "fake_ssn", cel: `fake_ssn()`},
		{name: "fake_hobby", cel: `fake_hobby()`},
		{name: "fake_email", cel: `fake_email()`},
		{name: "fake_phone", cel: `fake_phone()`},
		{name: "fake_phone_formatted", cel: `fake_phone_formatted()`},
		{name: "fake_username", cel: `fake_username()`},
		{name: "fake_city", cel: `fake_city()`},
		{name: "fake_country", cel: `fake_country()`},
		{name: "fake_country_abr", cel: `fake_country_abr()`},
		{name: "fake_state", cel: `fake_state()`},
		{name: "fake_state_abr", cel: `fake_state_abr()`},
		{name: "fake_street", cel: `fake_street()`},
		{name: "fake_street_name", cel: `fake_street_name()`},
		{name: "fake_street_number", cel: `fake_street_number()`},
		{name: "fake_street_prefix", cel: `fake_street_prefix()`},
		{name: "fake_street_suffix", cel: `fake_street_suffix()`},
		{name: "fake_zip", cel: `fake_zip()`},
		{name: "fake_latitude", cel: `fake_latitude()`},
		{name: "fake_longitude", cel: `fake_longitude()`},
		{name: "fake_gamertag", cel: `fake_gamertag()`},
		{name: "fake_beer_alcohol", cel: `fake_beer_alcohol()`},
		{name: "fake_beer_blg", cel: `fake_beer_blg()`},
		{name: "fake_beer_hop", cel: `fake_beer_hop()`},
		{name: "fake_beer_ibu", cel: `fake_beer_ibu()`},
		{name: "fake_beer_malt", cel: `fake_beer_malt()`},
		{name: "fake_beer_name", cel: `fake_beer_name()`},
		{name: "fake_beer_style", cel: `fake_beer_style()`},
		{name: "fake_beer_yeast", cel: `fake_beer_yeast()`},
		{name: "fake_car_maker", cel: `fake_car_maker()`},
		{name: "fake_car_model", cel: `fake_car_model()`},
		{name: "fake_car_type", cel: `fake_car_type()`},
		{name: "fake_car_transmission_type", cel: `fake_car_transmission_type()`},
		{name: "fake_noun", cel: `fake_noun()`},
		{name: "fake_noun_common", cel: `fake_noun_common()`},
		{name: "fake_noun_concrete", cel: `fake_noun_concrete()`},
		{name: "fake_noun", cel: `fake_noun()`},
		{name: "fake_noun_common", cel: `fake_noun_common()`},
		{name: "fake_noun_concrete", cel: `fake_noun_concrete()`},
		{name: "fake_noun_abstract", cel: `fake_noun_abstract()`},
		{name: "fake_noun_collective_people", cel: `fake_noun_collective_people()`},
		{name: "fake_noun_collective_animal", cel: `fake_noun_collective_animal()`},
		{name: "fake_noun_collective_thing", cel: `fake_noun_collective_thing()`},
		{name: "fake_noun_countable", cel: `fake_noun_countable()`},
		{name: "fake_noun_uncountable", cel: `fake_noun_uncountable()`},
		{name: "fake_verb", cel: `fake_verb()`},
		{name: "fake_verb_action", cel: `fake_verb_action()`},
		{name: "fake_verb_linking", cel: `fake_verb_linking()`},
		{name: "fake_verb_helping", cel: `fake_verb_helping()`},
		{name: "fake_adverb", cel: `fake_adverb()`},
		{name: "fake_adverb_manner", cel: `fake_adverb_manner()`},
		{name: "fake_adverb_degree", cel: `fake_adverb_degree()`},
		{name: "fake_adverb_place", cel: `fake_adverb_place()`},
		{name: "fake_adverb_time_definite", cel: `fake_adverb_time_definite()`},
		{name: "fake_adverb_time_indefinite", cel: `fake_adverb_time_indefinite()`},
		{name: "fake_adverb_frequency_definite", cel: `fake_adverb_frequency_definite()`},
		{name: "fake_adverb_frequency_indefinite", cel: `fake_adverb_frequency_indefinite()`},
		{name: "fake_preposition", cel: `fake_preposition()`},
		{name: "fake_preposition_simple", cel: `fake_preposition_simple()`},
		{name: "fake_preposition_double", cel: `fake_preposition_double()`},
		{name: "fake_preposition_compound", cel: `fake_preposition_compound()`},
		{name: "fake_adjective", cel: `fake_adjective()`},
		{name: "fake_adjective_descriptive", cel: `fake_adjective_descriptive()`},
		{name: "fake_adjective_quantitative", cel: `fake_adjective_quantitative()`},
		{name: "fake_adjective_proper", cel: `fake_adjective_proper()`},
		{name: "fake_adjective_demonstrative", cel: `fake_adjective_demonstrative()`},
		{name: "fake_adjective_possessive", cel: `fake_adjective_possessive()`},
		{name: "fake_adjective_interrogative", cel: `fake_adjective_interrogative()`},
		{name: "fake_adjective_indefinite", cel: `fake_adjective_indefinite()`},
		{name: "fake_pronoun", cel: `fake_pronoun()`},
		{name: "fake_pronoun_personal", cel: `fake_pronoun_personal()`},
		{name: "fake_pronoun_object", cel: `fake_pronoun_object()`},
		{name: "fake_pronoun_possessive", cel: `fake_pronoun_possessive()`},
		{name: "fake_pronoun_reflective", cel: `fake_pronoun_reflective()`},
		{name: "fake_pronoun_demonstrative", cel: `fake_pronoun_demonstrative()`},
		{name: "fake_pronoun_interrogative", cel: `fake_pronoun_interrogative()`},
		{name: "fake_pronoun_relative", cel: `fake_pronoun_relative()`},
		{name: "fake_connective", cel: `fake_connective()`},
		{name: "fake_connective_time", cel: `fake_connective_time()`},
		{name: "fake_connective_comparative", cel: `fake_connective_comparative()`},
		{name: "fake_connective_complaint", cel: `fake_connective_complaint()`},
		{name: "fake_connective_listing", cel: `fake_connective_listing()`},
		{name: "fake_connective_casual", cel: `fake_connective_casual()`},
		{name: "fake_connective_examplify", cel: `fake_connective_examplify()`},
		{name: "fake_lorem_ipsum_word", cel: `fake_lorem_ipsum_word()`},
		{name: "fake_question", cel: `fake_question()`},
		{name: "fake_quote", cel: `fake_quote()`},
		{name: "fake_phrase", cel: `fake_phrase()`},
		{name: "fake_fruit", cel: `fake_fruit()`},
		{name: "fake_vegetable", cel: `fake_vegetable()`},
		{name: "fake_breakfast", cel: `fake_breakfast()`},
		{name: "fake_lunch", cel: `fake_lunch()`},
		{name: "fake_dinner", cel: `fake_dinner()`},
		{name: "fake_snack", cel: `fake_snack()`},
		{name: "fake_dessert", cel: `fake_dessert()`},
		{name: "fake_uuid", cel: `fake_uuid()`},
		{name: "fake_flip_a_coin", cel: `fake_flip_a_coin()`},
		{name: "fake_color", cel: `fake_color()`},
		{name: "fake_hex_color", cel: `fake_hex_color()`},
		{name: "fake_safe_color", cel: `fake_safe_color()`},
		{name: "fake_url", cel: `fake_url()`},
		{name: "fake_domain_name", cel: `fake_domain_name()`},
		{name: "fake_domain_suffix", cel: `fake_domain_suffix()`},
		{name: "fake_i_pv4_address", cel: `fake_i_pv4_address()`},
		{name: "fake_i_pv6_address", cel: `fake_i_pv6_address()`},
		{name: "fake_mac_address", cel: `fake_mac_address()`},
		{name: "fake_http_status_code", cel: `fake_http_status_code()`},
		{name: "fake_http_status_code_simple", cel: `fake_http_status_code_simple()`},
		{name: "fake_http_method", cel: `fake_http_method()`},
		{name: "fake_http_version", cel: `fake_http_version()`},
		{name: "fake_user_agent", cel: `fake_user_agent()`},
		{name: "fake_chrome_user_agent", cel: `fake_chrome_user_agent()`},
		{name: "fake_firefox_user_agent", cel: `fake_firefox_user_agent()`},
		{name: "fake_opera_user_agent", cel: `fake_opera_user_agent()`},
		{name: "fake_safari_user_agent", cel: `fake_safari_user_agent()`},
		{name: "fake_input_name", cel: `fake_input_name()`},
		{name: "fake_date", cel: `fake_date()`},
		{name: "fake_past_date", cel: `fake_past_date()`},
		{name: "fake_future_date", cel: `fake_future_date()`},
		{name: "fake_nanosecond", cel: `fake_nanosecond()`},
		{name: "fake_second", cel: `fake_second()`},
		{name: "fake_minute", cel: `fake_minute()`},
		{name: "fake_hour", cel: `fake_hour()`},
		{name: "fake_month", cel: `fake_month()`},
		{name: "fake_month_string", cel: `fake_month_string()`},
		{name: "fake_day", cel: `fake_day()`},
		{name: "fake_week_day", cel: `fake_week_day()`},
		{name: "fake_year", cel: `fake_year()`},
		{name: "fake_time_zone", cel: `fake_time_zone()`},
		{name: "fake_time_zone_abv", cel: `fake_time_zone_abv()`},
		{name: "fake_time_zone_full", cel: `fake_time_zone_full()`},
		{name: "fake_time_offset", cel: `fake_time_offset()`},
		{name: "fake_time_zone_region", cel: `fake_time_zone_region()`},
		{name: "fake_credit_card_cvv", cel: `fake_credit_card_cvv()`},
		{name: "fake_credit_card_exp", cel: `fake_credit_card_exp()`},
		{name: "fake_credit_card_type", cel: `fake_credit_card_type()`},
		{name: "fake_currency_long", cel: `fake_currency_long()`},
		{name: "fake_currency_short", cel: `fake_currency_short()`},
		{name: "fake_ach_routing", cel: `fake_ach_routing()`},
		{name: "fake_ach_account", cel: `fake_ach_account()`},
		{name: "fake_bitcoin_address", cel: `fake_bitcoin_address()`},
		{name: "fake_bitcoin_private_key", cel: `fake_bitcoin_private_key()`},
		{name: "fake_cusip", cel: `fake_cusip()`},
		{name: "fake_isin", cel: `fake_isin()`},
		{name: "fake_bs", cel: `fake_bs()`},
		{name: "fake_blurb", cel: `fake_blurb()`},
		{name: "fake_buzz_word", cel: `fake_buzz_word()`},
		{name: "fake_company", cel: `fake_company()`},
		{name: "fake_company_suffix", cel: `fake_company_suffix()`},
		{name: "fake_job_descriptor", cel: `fake_job_descriptor()`},
		{name: "fake_job_level", cel: `fake_job_level()`},
		{name: "fake_job_title", cel: `fake_job_title()`},
		{name: "fake_slogan", cel: `fake_slogan()`},
		{name: "fake_hacker_abbreviation", cel: `fake_hacker_abbreviation()`},
		{name: "fake_hacker_adjective", cel: `fake_hacker_adjective()`},
		{name: "fake_hackering_verb", cel: `fake_hackering_verb()`},
		{name: "fake_hacker_noun", cel: `fake_hacker_noun()`},
		{name: "fake_hacker_phrase", cel: `fake_hacker_phrase()`},
		{name: "fake_hacker_verb", cel: `fake_hacker_verb()`},
		{name: "fake_hipster_word", cel: `fake_hipster_word()`},
		{name: "fake_app_name", cel: `fake_app_name()`},
		{name: "fake_app_version", cel: `fake_app_version()`},
		{name: "fake_app_author", cel: `fake_app_author()`},
		{name: "fake_pet_name", cel: `fake_pet_name()`},
		{name: "fake_animal", cel: `fake_animal()`},
		{name: "fake_animal_type", cel: `fake_animal_type()`},
		{name: "fake_farm_animal", cel: `fake_farm_animal()`},
		{name: "fake_cat", cel: `fake_cat()`},
		{name: "fake_dog", cel: `fake_dog()`},
		{name: "fake_bird", cel: `fake_bird()`},
		{name: "fake_emoji", cel: `fake_emoji()`},
		{name: "fake_emoji_description", cel: `fake_emoji_description()`},
		{name: "fake_emoji_category", cel: `fake_emoji_category()`},
		{name: "fake_emoji_alias", cel: `fake_emoji_alias()`},
		{name: "fake_emoji_tag", cel: `fake_emoji_tag()`},
		{name: "fake_language", cel: `fake_language()`},
		{name: "fake_language_abbreviation", cel: `fake_language_abbreviation()`},
		{name: "fake_programming_language", cel: `fake_programming_language()`},
		{name: "fake_programming_language_best", cel: `fake_programming_language_best()`},
		{name: "fake_int", cel: `fake_int()`},
		{name: "fake_intn", cel: `fake_intn(10)`},
		{name: "fake_int8", cel: `fake_int8()`},
		{name: "fake_int16", cel: `fake_int16()`},
		{name: "fake_int32", cel: `fake_int32()`},
		{name: "fake_int64", cel: `fake_int64()`},
		{name: "fake_uint", cel: `fake_uint()`},
		{name: "fake_uintn", cel: `fake_uintn(100)`},
		{name: "fake_uint8", cel: `fake_uint8()`},
		{name: "fake_uint16", cel: `fake_uint16()`},
		{name: "fake_uint32", cel: `fake_uint32()`},
		{name: "fake_uint64", cel: `fake_uint64()`},
		{name: "fake_float32", cel: `fake_float32()`},
		{name: "fake_float64", cel: `fake_float64()`},
		{name: "fake_digit", cel: `fake_digit()`},
		{name: "fake_letter", cel: `fake_letter()`},
		{name: "fake_celebrity_actor", cel: `fake_celebrity_actor()`},
		{name: "fake_celebrity_business", cel: `fake_celebrity_business()`},
		{name: "fake_celebrity_sport", cel: `fake_celebrity_sport()`},
		{name: "fake_minecraft_ore", cel: `fake_minecraft_ore()`},
		{name: "fake_minecraft_wood", cel: `fake_minecraft_wood()`},
		{name: "fake_minecraft_armor_tier", cel: `fake_minecraft_armor_tier()`},
		{name: "fake_minecraft_armor_part", cel: `fake_minecraft_armor_part()`},
		{name: "fake_minecraft_weapon", cel: `fake_minecraft_weapon()`},
		{name: "fake_minecraft_tool", cel: `fake_minecraft_tool()`},
		{name: "fake_minecraft_dye", cel: `fake_minecraft_dye()`},
		{name: "fake_minecraft_food", cel: `fake_minecraft_food()`},
		{name: "fake_minecraft_animal", cel: `fake_minecraft_animal()`},
		{name: "fake_minecraft_villager_job", cel: `fake_minecraft_villager_job()`},
		{name: "fake_minecraft_villager_station", cel: `fake_minecraft_villager_station()`},
		{name: "fake_minecraft_villager_level", cel: `fake_minecraft_villager_level()`},
		{name: "fake_minecraft_mob_passive", cel: `fake_minecraft_mob_passive()`},
		{name: "fake_minecraft_mob_neutral", cel: `fake_minecraft_mob_neutral()`},
		{name: "fake_minecraft_mob_hostile", cel: `fake_minecraft_mob_hostile()`},
		{name: "fake_minecraft_mob_boss", cel: `fake_minecraft_mob_boss()`},
		{name: "fake_minecraft_biome", cel: `fake_minecraft_biome()`},
		{name: "fake_minecraft_weather", cel: `fake_minecraft_weather()`},
		{name: "fake_book_title", cel: `fake_book_title()`},
		{name: "fake_book_author", cel: `fake_book_author()`},
		{name: "fake_book_genre", cel: `fake_book_genre()`},
		{name: "fake_movie_name", cel: `fake_movie_name()`},
		{name: "fake_movie_genre", cel: `fake_movie_genre()`},
		{name: "fake_school", cel: `fake_school()`},
	}
	for _, tc := range testCases {
		t.Run(tc.name, func(t *testing.T) {
			env, err := cel.NewEnv(celfakeit.Configure())
			require.NoError(t, err)

			ast, issues := env.Compile(tc.cel)
			require.NoError(t, issues.Err())

			program, err := env.Program(ast)
			require.NoError(t, err)

			out, _, err := program.Eval(map[string]any{})
			switch {
			case tc.expectedErr != nil:
				assert.ErrorIs(t, err, tc.expectedErr)
			default:
				require.NoError(t, err)
				assert.NotEmpty(t, out.Value())
			}
		})
	}
}
