package partials

templ Stubs() {
	<div x-data='{
    stubs: [{ id: "say-hello-default", target: "connectrpc.eliza.v1.ElizaService/Say", cel_content: { sentence: "req.sentence" } }],
    isModalOpen: false,
    editingStub: null,
    newStub: { id: "", target: "", cel_content: "{\n  \"sentence\": \"req.sentence\"\n}" },
    rpcTargets: ["connectrpc.eliza.v1.ElizaService/Say", "connectrpc.eliza.v1.ElizaService/Converse", "user.v1.UserService/CreateUser", "user.v1.UserService/GetUser"],
    
    openModal(stub = null) {
        if (stub) {
            this.editingStub = JSON.parse(JSON.stringify(stub));
            this.newStub = { ...this.editingStub, cel_content: JSON.stringify(this.editingStub.cel_content, null, 2) };
        } else {
            this.editingStub = null;
            this.newStub = { id: "", target: "", cel_content: "{\n  \"sentence\": \"req.sentence\"\n}" };
        }
        this.isModalOpen = true;
    },
    
    saveStub() {
        let parsedCel;
        try {
            parsedCel = JSON.parse(this.newStub.cel_content);
        } catch (e) {
            alert("CEL Content is not valid JSON.");
            return;
        }

        const finalStub = { ...this.newStub, cel_content: parsedCel };

        if (this.editingStub) {
            const index = this.stubs.findIndex(s => s.id === this.editingStub.id);
            this.stubs[index] = finalStub;
        } else {
            finalStub.id = finalStub.id || crypto.randomUUID();
            this.stubs.push(finalStub);
        }
        this.isModalOpen = false;
    },

    deleteStub(id) {
        this.stubs = this.stubs.filter(s => s.id !== id);
    }
}'>
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-3xl font-bold text-white">Stubs</h1>
        <button @click="openModal()" class="flex items-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-500 text-white font-semibold rounded-lg transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-5 w-5"><line x1="12" y1="5" x2="12" y2="19"></line><line x1="5" y1="12" x2="19" y2="12"></line></svg>
            Add Stub
        </button>
    </div>
    <div class="space-y-4">
        <template x-for="stub in stubs" :key="stub.id">
            <div class="bg-gray-800/60 border border-gray-700 rounded-lg p-4">
                <div class="flex justify-between items-start">
                    <div>
                        <h3 class="text-lg font-bold text-blue-400" x-text="stub.id"></h3>
                        <p class="text-gray-400 font-mono mt-1" x-text="stub.target"></p>
                    </div>
                    <div class="flex space-x-2">
                        <button @click="openModal(stub)" class="text-gray-400 hover:text-white">Edit</button>
                        <button @click="deleteStub(stub.id)" class="text-red-500 hover:text-red-400">Delete</button>
                    </div>
                </div>
                <pre class="bg-gray-900/70 p-3 rounded-md text-sm text-gray-300 overflow-x-auto mt-4"><code x-text="JSON.stringify(stub.cel_content, null, 2)"></code></pre>
            </div>
        </template>
    </div>

    <!-- Modal -->
    <div x-show="isModalOpen" x-cloak class="fixed inset-0 bg-black/60 flex items-center justify-center z-50 p-4" @click.self="isModalOpen = false">
        <div class="bg-gray-800 rounded-lg shadow-xl p-8 w-full max-w-2xl border border-gray-700" @click.stop>
            <div class="flex justify-between items-center mb-6">
                <h2 class="text-2xl font-bold text-white" x-text="editingStub ? 'Edit Stub' : 'Add Stub'"></h2>
                <button @click="isModalOpen = false" class="text-gray-500 hover:text-white"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-6 w-6"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg></button>
            </div>
            <form @submit.prevent="saveStub">
                <div class="space-y-4">
                    <div>
                        <label for="stub-id" class="block text-sm font-medium text-gray-300 mb-1">ID</label>
                        <input type="text" id="stub-id" x-model="newStub.id" :disabled="editingStub" placeholder="e.g., say-hello-default" class="w-full bg-gray-900 border border-gray-600 rounded-md px-3 py-2 text-white focus:ring-blue-500 focus:border-blue-500 disabled:opacity-50">
                    </div>
                    <div x-data="{ showDropdown: false, filter: '' }" class="relative">
                        <label for="stub-target" class="block text-sm font-medium text-gray-300 mb-1">Target</label>
                        <input type="text" id="stub-target" x-model="newStub.target" @focus="showDropdown = true" @input="filter = $event.target.value" placeholder="e.g., connectrpc.eliza.v1.ElizaService/Say" class="w-full bg-gray-900 border border-gray-600 rounded-md px-3 py-2 text-white focus:ring-blue-500 focus:border-blue-500" required>
                        <div x-show="showDropdown" @click.away="showDropdown = false" class="absolute z-10 w-full mt-1 bg-gray-700 border border-gray-600 rounded-md shadow-lg max-h-60 overflow-auto">
                            <ul>
                                <template x-for="option in rpcTargets.filter(opt => opt.toLowerCase().includes(newStub.target.toLowerCase()))" :key="option">
                                    <li @click="newStub.target = option; showDropdown = false" class="px-4 py-2 text-white hover:bg-blue-600 cursor-pointer" x-text="option"></li>
                                </template>
                            </ul>
                        </div>
                    </div>
                    <div>
                        <label for="stub-cel" class="block text-sm font-medium text-gray-300 mb-1">CEL Content (JSON)</label>
                        <textarea id="stub-cel" x-model="newStub.cel_content" rows="6" class="w-full bg-gray-900 border border-gray-600 rounded-md px-3 py-2 text-white font-mono text-sm focus:ring-blue-500 focus:border-blue-500"></textarea>
                    </div>
                </div>
                <div class="flex justify-end space-x-4 mt-8">
                    <button type="button" @click="isModalOpen = false" class="px-4 py-2 bg-gray-600 hover:bg-gray-500 text-white font-semibold rounded-lg transition-colors">Cancel</button>
                    <button type="submit" class="px-4 py-2 bg-blue-600 hover:bg-blue-500 text-white font-semibold rounded-lg transition-colors">Save Stub</button>
                </div>
            </form>
        </div>
    </div>
</div>
}