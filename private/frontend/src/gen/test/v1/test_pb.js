// @generated by protoc-gen-es v2.6.2
// @generated from file test/v1/test.proto (package test.v1, edition 2023)
/* eslint-disable */

import { enumDesc, fileDesc, messageDesc, tsEnum } from "@bufbuild/protobuf/codegenv2";
import { file_google_protobuf_duration, file_google_protobuf_field_mask, file_google_protobuf_go_features, file_google_protobuf_struct, file_google_protobuf_timestamp, file_google_protobuf_wrappers } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file test/v1/test.proto.
 */
export const file_test_v1_test = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_duration, file_google_protobuf_field_mask, file_google_protobuf_go_features, file_google_protobuf_struct, file_google_protobuf_timestamp, file_google_protobuf_wrappers]);

/**
 * Describes the message test.v1.ParameterValues.
 * Use `create(ParameterValuesSchema)` to create a new message.
 */
export const ParameterValuesSchema = /*@__PURE__*/
  messageDesc(file_test_v1_test, 0);

/**
 * Describes the message test.v1.ParameterValues.Nested.
 * Use `create(ParameterValues_NestedSchema)` to create a new message.
 */
export const ParameterValues_NestedSchema = /*@__PURE__*/
  messageDesc(file_test_v1_test, 0, 0);

/**
 * Describes the enum test.v1.ParameterValues.Nested.Enum.
 */
export const ParameterValues_Nested_EnumSchema = /*@__PURE__*/
  enumDesc(file_test_v1_test, 0, 0, 0);

/**
 * @generated from enum test.v1.ParameterValues.Nested.Enum
 */
export const ParameterValues_Nested_Enum = /*@__PURE__*/
  tsEnum(ParameterValues_Nested_EnumSchema);

/**
 * Describes the enum test.v1.ParameterValues.Enum.
 */
export const ParameterValues_EnumSchema = /*@__PURE__*/
  enumDesc(file_test_v1_test, 0, 0);

/**
 * enum types
 *
 * @generated from enum test.v1.ParameterValues.Enum
 */
export const ParameterValues_Enum = /*@__PURE__*/
  tsEnum(ParameterValues_EnumSchema);

/**
 * Describes the message test.v1.AllTypes.
 * Use `create(AllTypesSchema)` to create a new message.
 */
export const AllTypesSchema = /*@__PURE__*/
  messageDesc(file_test_v1_test, 1);

/**
 * Describes the enum test.v1.AllTypes.Enum.
 */
export const AllTypes_EnumSchema = /*@__PURE__*/
  enumDesc(file_test_v1_test, 1, 0);

/**
 * named types
 *
 * @generated from enum test.v1.AllTypes.Enum
 */
export const AllTypes_Enum = /*@__PURE__*/
  tsEnum(AllTypes_EnumSchema);

