// @generated by protoc-gen-es v2.6.2
// @generated from file dashboard/v1/dashboard_service.proto (package dashboard.v1, edition 2023)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file dashboard/v1/dashboard_service.proto.
 */
export declare const file_dashboard_v1_dashboard_service: GenFile;

/**
 * GetDashboardSummaryRequest is the request message for the GetDashboardSummary RPC.
 * It is currently empty, but could be extended in the future to allow clients
 * to specify what data they are interested in.
 *
 * @generated from message dashboard.v1.GetDashboardSummaryRequest
 */
export declare type GetDashboardSummaryRequest = Message<"dashboard.v1.GetDashboardSummaryRequest"> & {
};

/**
 * Describes the message dashboard.v1.GetDashboardSummaryRequest.
 * Use `create(GetDashboardSummaryRequestSchema)` to create a new message.
 */
export declare const GetDashboardSummaryRequestSchema: GenMessage<GetDashboardSummaryRequest>;

/**
 * GetDashboardSummaryResponse contains a snapshot of the dashboard summary data.
 *
 * @generated from message dashboard.v1.GetDashboardSummaryResponse
 */
export declare type GetDashboardSummaryResponse = Message<"dashboard.v1.GetDashboardSummaryResponse"> & {
  /**
   * The total number of requests handled by the server.
   *
   * @generated from field: int64 total_requests = 1;
   */
  totalRequests: bigint;

  /**
   * The current number of requests being processed per second.
   *
   * @generated from field: double requests_per_second = 2;
   */
  requestsPerSecond: number;

  /**
   * The total number of requests that resulted in an error.
   *
   * @generated from field: int64 total_errors = 3;
   */
  totalErrors: bigint;

  /**
   * The error rate as a percentage string (e.g., "0.007%").
   *
   * @generated from field: string error_rate = 4;
   */
  errorRate: string;

  /**
   * The number of unique gRPC services discovered.
   *
   * @generated from field: int64 unique_services = 5;
   */
  uniqueServices: bigint;

  /**
   * The number of unique gRPC methods discovered.
   *
   * @generated from field: int64 unique_methods = 6;
   */
  uniqueMethods: bigint;

  /**
   * A human-readable string representing server uptime (e.g., "2d 14h 32m").
   *
   * @generated from field: string uptime = 7;
   */
  uptime: string;

  /**
   * The version of Go the server was built with.
   *
   * @generated from field: string go_version = 8;
   */
  goVersion: string;

  /**
   * The version of the FauxRPC server.
   *
   * @generated from field: string fauxrpc_version = 9;
   */
  fauxrpcVersion: string;

  /**
   * The host and port the service is available on.
   *
   * @generated from field: string http_host = 10;
   */
  httpHost: string;
};

/**
 * Describes the message dashboard.v1.GetDashboardSummaryResponse.
 * Use `create(GetDashboardSummaryResponseSchema)` to create a new message.
 */
export declare const GetDashboardSummaryResponseSchema: GenMessage<GetDashboardSummaryResponse>;

/**
 * DashboardService provides an RPC for streaming dashboard summary data.
 *
 * @generated from service dashboard.v1.DashboardService
 */
export declare const DashboardService: GenService<{
  /**
   * GetDashboardSummary starts a stream of dashboard summary data. The server
   * will periodically send updates to the client.
   *
   * @generated from rpc dashboard.v1.DashboardService.GetDashboardSummary
   */
  getDashboardSummary: {
    methodKind: "unary";
    input: typeof GetDashboardSummaryRequestSchema;
    output: typeof GetDashboardSummaryResponseSchema;
  },
}>;

