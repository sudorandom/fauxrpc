// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: test/v1/test.proto

package testv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/gofeaturespb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// enum types
type ParameterValues_Enum int32

const (
	ParameterValues_ENUM_UNSPECIFIED ParameterValues_Enum = 0
	ParameterValues_ENUM_VALUE       ParameterValues_Enum = 1
)

// Enum value maps for ParameterValues_Enum.
var (
	ParameterValues_Enum_name = map[int32]string{
		0: "ENUM_UNSPECIFIED",
		1: "ENUM_VALUE",
	}
	ParameterValues_Enum_value = map[string]int32{
		"ENUM_UNSPECIFIED": 0,
		"ENUM_VALUE":       1,
	}
)

func (x ParameterValues_Enum) Enum() *ParameterValues_Enum {
	p := new(ParameterValues_Enum)
	*p = x
	return p
}

func (x ParameterValues_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParameterValues_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_test_v1_test_proto_enumTypes[0].Descriptor()
}

func (ParameterValues_Enum) Type() protoreflect.EnumType {
	return &file_test_v1_test_proto_enumTypes[0]
}

func (x ParameterValues_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ParameterValues_Nested_Enum int32

const (
	ParameterValues_Nested_ENUM_UNSPECIFIED ParameterValues_Nested_Enum = 0
	ParameterValues_Nested_ENUM_VALUE       ParameterValues_Nested_Enum = 1
)

// Enum value maps for ParameterValues_Nested_Enum.
var (
	ParameterValues_Nested_Enum_name = map[int32]string{
		0: "ENUM_UNSPECIFIED",
		1: "ENUM_VALUE",
	}
	ParameterValues_Nested_Enum_value = map[string]int32{
		"ENUM_UNSPECIFIED": 0,
		"ENUM_VALUE":       1,
	}
)

func (x ParameterValues_Nested_Enum) Enum() *ParameterValues_Nested_Enum {
	p := new(ParameterValues_Nested_Enum)
	*p = x
	return p
}

func (x ParameterValues_Nested_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParameterValues_Nested_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_test_v1_test_proto_enumTypes[1].Descriptor()
}

func (ParameterValues_Nested_Enum) Type() protoreflect.EnumType {
	return &file_test_v1_test_proto_enumTypes[1]
}

func (x ParameterValues_Nested_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// named types
type AllTypes_Enum int32

const (
	AllTypes_ENUM_UNSPECIFIED AllTypes_Enum = 0
	AllTypes_ENUM_ONE         AllTypes_Enum = 1
	AllTypes_ENUM_TWO         AllTypes_Enum = 2
)

// Enum value maps for AllTypes_Enum.
var (
	AllTypes_Enum_name = map[int32]string{
		0: "ENUM_UNSPECIFIED",
		1: "ENUM_ONE",
		2: "ENUM_TWO",
	}
	AllTypes_Enum_value = map[string]int32{
		"ENUM_UNSPECIFIED": 0,
		"ENUM_ONE":         1,
		"ENUM_TWO":         2,
	}
)

func (x AllTypes_Enum) Enum() *AllTypes_Enum {
	p := new(AllTypes_Enum)
	*p = x
	return p
}

func (x AllTypes_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AllTypes_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_test_v1_test_proto_enumTypes[2].Descriptor()
}

func (AllTypes_Enum) Type() protoreflect.EnumType {
	return &file_test_v1_test_proto_enumTypes[2]
}

func (x AllTypes_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type EnumTest_TestEnum int32

const (
	EnumTest_TEST_ENUM_UNSPECIFIED EnumTest_TestEnum = 0
	EnumTest_TEST_ENUM_ONE         EnumTest_TestEnum = 1
	EnumTest_TEST_ENUM_TWO         EnumTest_TestEnum = 2
	EnumTest_TEST_ENUM_THREE       EnumTest_TestEnum = 3
)

// Enum value maps for EnumTest_TestEnum.
var (
	EnumTest_TestEnum_name = map[int32]string{
		0: "TEST_ENUM_UNSPECIFIED",
		1: "TEST_ENUM_ONE",
		2: "TEST_ENUM_TWO",
		3: "TEST_ENUM_THREE",
	}
	EnumTest_TestEnum_value = map[string]int32{
		"TEST_ENUM_UNSPECIFIED": 0,
		"TEST_ENUM_ONE":         1,
		"TEST_ENUM_TWO":         2,
		"TEST_ENUM_THREE":       3,
	}
)

func (x EnumTest_TestEnum) Enum() *EnumTest_TestEnum {
	p := new(EnumTest_TestEnum)
	*p = x
	return p
}

func (x EnumTest_TestEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumTest_TestEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_test_v1_test_proto_enumTypes[3].Descriptor()
}

func (EnumTest_TestEnum) Type() protoreflect.EnumType {
	return &file_test_v1_test_proto_enumTypes[3]
}

func (x EnumTest_TestEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type RepeatedEnumTest_TestEnum int32

const (
	RepeatedEnumTest_TEST_ENUM_UNSPECIFIED RepeatedEnumTest_TestEnum = 0
	RepeatedEnumTest_TEST_ENUM_ONE         RepeatedEnumTest_TestEnum = 1
	RepeatedEnumTest_TEST_ENUM_TWO         RepeatedEnumTest_TestEnum = 2
	RepeatedEnumTest_TEST_ENUM_THREE       RepeatedEnumTest_TestEnum = 3
)

// Enum value maps for RepeatedEnumTest_TestEnum.
var (
	RepeatedEnumTest_TestEnum_name = map[int32]string{
		0: "TEST_ENUM_UNSPECIFIED",
		1: "TEST_ENUM_ONE",
		2: "TEST_ENUM_TWO",
		3: "TEST_ENUM_THREE",
	}
	RepeatedEnumTest_TestEnum_value = map[string]int32{
		"TEST_ENUM_UNSPECIFIED": 0,
		"TEST_ENUM_ONE":         1,
		"TEST_ENUM_TWO":         2,
		"TEST_ENUM_THREE":       3,
	}
)

func (x RepeatedEnumTest_TestEnum) Enum() *RepeatedEnumTest_TestEnum {
	p := new(RepeatedEnumTest_TestEnum)
	*p = x
	return p
}

func (x RepeatedEnumTest_TestEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RepeatedEnumTest_TestEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_test_v1_test_proto_enumTypes[4].Descriptor()
}

func (RepeatedEnumTest_TestEnum) Type() protoreflect.EnumType {
	return &file_test_v1_test_proto_enumTypes[4]
}

func (x RepeatedEnumTest_TestEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

type ParameterValues struct {
	state                         protoimpl.MessageState             `protogen:"opaque.v1"`
	xxx_hidden_DoubleValue        float64                            `protobuf:"fixed64,1,opt,name=double_value,json=doubleValue"`
	xxx_hidden_FloatValue         float32                            `protobuf:"fixed32,2,opt,name=float_value,json=floatValue"`
	xxx_hidden_Int32Value         int32                              `protobuf:"varint,3,opt,name=int32_value,json=int32Value"`
	xxx_hidden_Int64Value         int64                              `protobuf:"varint,4,opt,name=int64_value,json=int64Value"`
	xxx_hidden_Uint32Value        uint32                             `protobuf:"varint,5,opt,name=uint32_value,json=uint32Value"`
	xxx_hidden_Uint64Value        uint64                             `protobuf:"varint,6,opt,name=uint64_value,json=uint64Value"`
	xxx_hidden_Sint32Value        int32                              `protobuf:"zigzag32,7,opt,name=sint32_value,json=sint32Value"`
	xxx_hidden_Sint64Value        int64                              `protobuf:"zigzag64,8,opt,name=sint64_value,json=sint64Value"`
	xxx_hidden_Fixed32Value       uint32                             `protobuf:"fixed32,9,opt,name=fixed32_value,json=fixed32Value"`
	xxx_hidden_Fixed64Value       uint64                             `protobuf:"fixed64,10,opt,name=fixed64_value,json=fixed64Value"`
	xxx_hidden_Sfixed32Value      int32                              `protobuf:"fixed32,11,opt,name=sfixed32_value,json=sfixed32Value"`
	xxx_hidden_Sfixed64Value      int64                              `protobuf:"fixed64,12,opt,name=sfixed64_value,json=sfixed64Value"`
	xxx_hidden_BoolValue          bool                               `protobuf:"varint,13,opt,name=bool_value,json=boolValue"`
	xxx_hidden_StringValue        *string                            `protobuf:"bytes,14,opt,name=string_value,json=stringValue"`
	xxx_hidden_BytesValue         []byte                             `protobuf:"bytes,15,opt,name=bytes_value,json=bytesValue"`
	xxx_hidden_Timestamp          *timestamppb.Timestamp             `protobuf:"bytes,16,opt,name=timestamp"`
	xxx_hidden_Duration           *durationpb.Duration               `protobuf:"bytes,17,opt,name=duration"`
	xxx_hidden_BoolValueWrapper   *wrapperspb.BoolValue              `protobuf:"bytes,18,opt,name=bool_value_wrapper,json=boolValueWrapper"`
	xxx_hidden_Int32ValueWrapper  *wrapperspb.Int32Value             `protobuf:"bytes,19,opt,name=int32_value_wrapper,json=int32ValueWrapper"`
	xxx_hidden_Int64ValueWrapper  *wrapperspb.Int64Value             `protobuf:"bytes,20,opt,name=int64_value_wrapper,json=int64ValueWrapper"`
	xxx_hidden_Uint32ValueWrapper *wrapperspb.UInt32Value            `protobuf:"bytes,21,opt,name=uint32_value_wrapper,json=uint32ValueWrapper"`
	xxx_hidden_Uint64ValueWrapper *wrapperspb.UInt64Value            `protobuf:"bytes,22,opt,name=uint64_value_wrapper,json=uint64ValueWrapper"`
	xxx_hidden_FloatValueWrapper  *wrapperspb.FloatValue             `protobuf:"bytes,23,opt,name=float_value_wrapper,json=floatValueWrapper"`
	xxx_hidden_DoubleValueWrapper *wrapperspb.DoubleValue            `protobuf:"bytes,24,opt,name=double_value_wrapper,json=doubleValueWrapper"`
	xxx_hidden_BytesValueWrapper  *wrapperspb.BytesValue             `protobuf:"bytes,25,opt,name=bytes_value_wrapper,json=bytesValueWrapper"`
	xxx_hidden_StringValueWrapper *wrapperspb.StringValue            `protobuf:"bytes,26,opt,name=string_value_wrapper,json=stringValueWrapper"`
	xxx_hidden_FieldMask          *fieldmaskpb.FieldMask             `protobuf:"bytes,27,opt,name=field_mask,json=fieldMask"`
	xxx_hidden_EnumValue          ParameterValues_Enum               `protobuf:"varint,28,opt,name=enum_value,json=enumValue,enum=test.v1.ParameterValues_Enum"`
	xxx_hidden_EnumList           []ParameterValues_Enum             `protobuf:"varint,29,rep,packed,name=enum_list,json=enumList,enum=test.v1.ParameterValues_Enum"`
	xxx_hidden_DoubleList         []float64                          `protobuf:"fixed64,30,rep,packed,name=double_list,json=doubleList"`
	xxx_hidden_DoubleValueList    *[]*wrapperspb.DoubleValue         `protobuf:"bytes,31,rep,name=double_value_list,json=doubleValueList"`
	xxx_hidden_Oneof              isParameterValues_Oneof            `protobuf_oneof:"oneof"`
	xxx_hidden_Nested             *ParameterValues_Nested            `protobuf:"bytes,36,opt,name=nested"`
	xxx_hidden_Recursive          *ParameterValues                   `protobuf:"bytes,37,opt,name=recursive"`
	xxx_hidden_StringMap          map[string]string                  `protobuf:"bytes,38,rep,name=string_map,json=stringMap" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_StringValueMap     map[string]*wrapperspb.StringValue `protobuf:"bytes,39,rep,name=string_value_map,json=stringValueMap" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_EnumMap            map[string]ParameterValues_Enum    `protobuf:"bytes,40,rep,name=enum_map,json=enumMap" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=test.v1.ParameterValues_Enum"`
	xxx_hidden_NestedMap          map[string]*ParameterValues_Nested `protobuf:"bytes,41,rep,name=nested_map,json=nestedMap" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_StructValue        *structpb.Struct                   `protobuf:"bytes,42,opt,name=struct_value,json=structValue"`
	xxx_hidden_Value              *structpb.Value                    `protobuf:"bytes,43,opt,name=value"`
	xxx_hidden_RecursiveList      *[]*ParameterValues                `protobuf:"bytes,44,rep,name=recursive_list,json=recursiveList"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [2]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *ParameterValues) Reset() {
	*x = ParameterValues{}
	mi := &file_test_v1_test_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParameterValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParameterValues) ProtoMessage() {}

func (x *ParameterValues) ProtoReflect() protoreflect.Message {
	mi := &file_test_v1_test_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ParameterValues) GetDoubleValue() float64 {
	if x != nil {
		return x.xxx_hidden_DoubleValue
	}
	return 0
}

func (x *ParameterValues) GetFloatValue() float32 {
	if x != nil {
		return x.xxx_hidden_FloatValue
	}
	return 0
}

func (x *ParameterValues) GetInt32Value() int32 {
	if x != nil {
		return x.xxx_hidden_Int32Value
	}
	return 0
}

func (x *ParameterValues) GetInt64Value() int64 {
	if x != nil {
		return x.xxx_hidden_Int64Value
	}
	return 0
}

func (x *ParameterValues) GetUint32Value() uint32 {
	if x != nil {
		return x.xxx_hidden_Uint32Value
	}
	return 0
}

func (x *ParameterValues) GetUint64Value() uint64 {
	if x != nil {
		return x.xxx_hidden_Uint64Value
	}
	return 0
}

func (x *ParameterValues) GetSint32Value() int32 {
	if x != nil {
		return x.xxx_hidden_Sint32Value
	}
	return 0
}

func (x *ParameterValues) GetSint64Value() int64 {
	if x != nil {
		return x.xxx_hidden_Sint64Value
	}
	return 0
}

func (x *ParameterValues) GetFixed32Value() uint32 {
	if x != nil {
		return x.xxx_hidden_Fixed32Value
	}
	return 0
}

func (x *ParameterValues) GetFixed64Value() uint64 {
	if x != nil {
		return x.xxx_hidden_Fixed64Value
	}
	return 0
}

func (x *ParameterValues) GetSfixed32Value() int32 {
	if x != nil {
		return x.xxx_hidden_Sfixed32Value
	}
	return 0
}

func (x *ParameterValues) GetSfixed64Value() int64 {
	if x != nil {
		return x.xxx_hidden_Sfixed64Value
	}
	return 0
}

func (x *ParameterValues) GetBoolValue() bool {
	if x != nil {
		return x.xxx_hidden_BoolValue
	}
	return false
}

func (x *ParameterValues) GetStringValue() string {
	if x != nil {
		if x.xxx_hidden_StringValue != nil {
			return *x.xxx_hidden_StringValue
		}
		return ""
	}
	return ""
}

func (x *ParameterValues) GetBytesValue() []byte {
	if x != nil {
		return x.xxx_hidden_BytesValue
	}
	return nil
}

func (x *ParameterValues) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_Timestamp
	}
	return nil
}

func (x *ParameterValues) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.xxx_hidden_Duration
	}
	return nil
}

func (x *ParameterValues) GetBoolValueWrapper() *wrapperspb.BoolValue {
	if x != nil {
		return x.xxx_hidden_BoolValueWrapper
	}
	return nil
}

func (x *ParameterValues) GetInt32ValueWrapper() *wrapperspb.Int32Value {
	if x != nil {
		return x.xxx_hidden_Int32ValueWrapper
	}
	return nil
}

func (x *ParameterValues) GetInt64ValueWrapper() *wrapperspb.Int64Value {
	if x != nil {
		return x.xxx_hidden_Int64ValueWrapper
	}
	return nil
}

func (x *ParameterValues) GetUint32ValueWrapper() *wrapperspb.UInt32Value {
	if x != nil {
		return x.xxx_hidden_Uint32ValueWrapper
	}
	return nil
}

func (x *ParameterValues) GetUint64ValueWrapper() *wrapperspb.UInt64Value {
	if x != nil {
		return x.xxx_hidden_Uint64ValueWrapper
	}
	return nil
}

func (x *ParameterValues) GetFloatValueWrapper() *wrapperspb.FloatValue {
	if x != nil {
		return x.xxx_hidden_FloatValueWrapper
	}
	return nil
}

func (x *ParameterValues) GetDoubleValueWrapper() *wrapperspb.DoubleValue {
	if x != nil {
		return x.xxx_hidden_DoubleValueWrapper
	}
	return nil
}

func (x *ParameterValues) GetBytesValueWrapper() *wrapperspb.BytesValue {
	if x != nil {
		return x.xxx_hidden_BytesValueWrapper
	}
	return nil
}

func (x *ParameterValues) GetStringValueWrapper() *wrapperspb.StringValue {
	if x != nil {
		return x.xxx_hidden_StringValueWrapper
	}
	return nil
}

func (x *ParameterValues) GetFieldMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.xxx_hidden_FieldMask
	}
	return nil
}

func (x *ParameterValues) GetEnumValue() ParameterValues_Enum {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 27) {
			return x.xxx_hidden_EnumValue
		}
	}
	return ParameterValues_ENUM_UNSPECIFIED
}

func (x *ParameterValues) GetEnumList() []ParameterValues_Enum {
	if x != nil {
		return x.xxx_hidden_EnumList
	}
	return nil
}

func (x *ParameterValues) GetDoubleList() []float64 {
	if x != nil {
		return x.xxx_hidden_DoubleList
	}
	return nil
}

func (x *ParameterValues) GetDoubleValueList() []*wrapperspb.DoubleValue {
	if x != nil {
		if x.xxx_hidden_DoubleValueList != nil {
			return *x.xxx_hidden_DoubleValueList
		}
	}
	return nil
}

func (x *ParameterValues) GetOneofDoubleValue() float64 {
	if x != nil {
		if x, ok := x.xxx_hidden_Oneof.(*parameterValues_OneofDoubleValue); ok {
			return x.OneofDoubleValue
		}
	}
	return 0
}

func (x *ParameterValues) GetOneofDoubleValueWrapper() *wrapperspb.DoubleValue {
	if x != nil {
		if x, ok := x.xxx_hidden_Oneof.(*parameterValues_OneofDoubleValueWrapper); ok {
			return x.OneofDoubleValueWrapper
		}
	}
	return nil
}

func (x *ParameterValues) GetOneofEnumValue() ParameterValues_Enum {
	if x != nil {
		if x, ok := x.xxx_hidden_Oneof.(*parameterValues_OneofEnumValue); ok {
			return x.OneofEnumValue
		}
	}
	return ParameterValues_ENUM_UNSPECIFIED
}

func (x *ParameterValues) GetNested() *ParameterValues_Nested {
	if x != nil {
		return x.xxx_hidden_Nested
	}
	return nil
}

func (x *ParameterValues) GetRecursive() *ParameterValues {
	if x != nil {
		return x.xxx_hidden_Recursive
	}
	return nil
}

func (x *ParameterValues) GetStringMap() map[string]string {
	if x != nil {
		return x.xxx_hidden_StringMap
	}
	return nil
}

func (x *ParameterValues) GetStringValueMap() map[string]*wrapperspb.StringValue {
	if x != nil {
		return x.xxx_hidden_StringValueMap
	}
	return nil
}

func (x *ParameterValues) GetEnumMap() map[string]ParameterValues_Enum {
	if x != nil {
		return x.xxx_hidden_EnumMap
	}
	return nil
}

func (x *ParameterValues) GetNestedMap() map[string]*ParameterValues_Nested {
	if x != nil {
		return x.xxx_hidden_NestedMap
	}
	return nil
}

func (x *ParameterValues) GetStructValue() *structpb.Struct {
	if x != nil {
		return x.xxx_hidden_StructValue
	}
	return nil
}

func (x *ParameterValues) GetValue() *structpb.Value {
	if x != nil {
		return x.xxx_hidden_Value
	}
	return nil
}

func (x *ParameterValues) GetRecursiveList() []*ParameterValues {
	if x != nil {
		if x.xxx_hidden_RecursiveList != nil {
			return *x.xxx_hidden_RecursiveList
		}
	}
	return nil
}

func (x *ParameterValues) SetDoubleValue(v float64) {
	x.xxx_hidden_DoubleValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 41)
}

func (x *ParameterValues) SetFloatValue(v float32) {
	x.xxx_hidden_FloatValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 41)
}

func (x *ParameterValues) SetInt32Value(v int32) {
	x.xxx_hidden_Int32Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 41)
}

func (x *ParameterValues) SetInt64Value(v int64) {
	x.xxx_hidden_Int64Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 41)
}

func (x *ParameterValues) SetUint32Value(v uint32) {
	x.xxx_hidden_Uint32Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 41)
}

func (x *ParameterValues) SetUint64Value(v uint64) {
	x.xxx_hidden_Uint64Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 41)
}

func (x *ParameterValues) SetSint32Value(v int32) {
	x.xxx_hidden_Sint32Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 41)
}

func (x *ParameterValues) SetSint64Value(v int64) {
	x.xxx_hidden_Sint64Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 41)
}

func (x *ParameterValues) SetFixed32Value(v uint32) {
	x.xxx_hidden_Fixed32Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 41)
}

func (x *ParameterValues) SetFixed64Value(v uint64) {
	x.xxx_hidden_Fixed64Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 41)
}

func (x *ParameterValues) SetSfixed32Value(v int32) {
	x.xxx_hidden_Sfixed32Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 41)
}

func (x *ParameterValues) SetSfixed64Value(v int64) {
	x.xxx_hidden_Sfixed64Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 41)
}

func (x *ParameterValues) SetBoolValue(v bool) {
	x.xxx_hidden_BoolValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 41)
}

func (x *ParameterValues) SetStringValue(v string) {
	x.xxx_hidden_StringValue = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 41)
}

func (x *ParameterValues) SetBytesValue(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_BytesValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 41)
}

func (x *ParameterValues) SetTimestamp(v *timestamppb.Timestamp) {
	x.xxx_hidden_Timestamp = v
}

func (x *ParameterValues) SetDuration(v *durationpb.Duration) {
	x.xxx_hidden_Duration = v
}

func (x *ParameterValues) SetBoolValueWrapper(v *wrapperspb.BoolValue) {
	x.xxx_hidden_BoolValueWrapper = v
}

func (x *ParameterValues) SetInt32ValueWrapper(v *wrapperspb.Int32Value) {
	x.xxx_hidden_Int32ValueWrapper = v
}

func (x *ParameterValues) SetInt64ValueWrapper(v *wrapperspb.Int64Value) {
	x.xxx_hidden_Int64ValueWrapper = v
}

func (x *ParameterValues) SetUint32ValueWrapper(v *wrapperspb.UInt32Value) {
	x.xxx_hidden_Uint32ValueWrapper = v
}

func (x *ParameterValues) SetUint64ValueWrapper(v *wrapperspb.UInt64Value) {
	x.xxx_hidden_Uint64ValueWrapper = v
}

func (x *ParameterValues) SetFloatValueWrapper(v *wrapperspb.FloatValue) {
	x.xxx_hidden_FloatValueWrapper = v
}

func (x *ParameterValues) SetDoubleValueWrapper(v *wrapperspb.DoubleValue) {
	x.xxx_hidden_DoubleValueWrapper = v
}

func (x *ParameterValues) SetBytesValueWrapper(v *wrapperspb.BytesValue) {
	x.xxx_hidden_BytesValueWrapper = v
}

func (x *ParameterValues) SetStringValueWrapper(v *wrapperspb.StringValue) {
	x.xxx_hidden_StringValueWrapper = v
}

func (x *ParameterValues) SetFieldMask(v *fieldmaskpb.FieldMask) {
	x.xxx_hidden_FieldMask = v
}

func (x *ParameterValues) SetEnumValue(v ParameterValues_Enum) {
	x.xxx_hidden_EnumValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 27, 41)
}

func (x *ParameterValues) SetEnumList(v []ParameterValues_Enum) {
	x.xxx_hidden_EnumList = v
}

func (x *ParameterValues) SetDoubleList(v []float64) {
	x.xxx_hidden_DoubleList = v
}

func (x *ParameterValues) SetDoubleValueList(v []*wrapperspb.DoubleValue) {
	x.xxx_hidden_DoubleValueList = &v
}

func (x *ParameterValues) SetOneofDoubleValue(v float64) {
	x.xxx_hidden_Oneof = &parameterValues_OneofDoubleValue{v}
}

func (x *ParameterValues) SetOneofDoubleValueWrapper(v *wrapperspb.DoubleValue) {
	if v == nil {
		x.xxx_hidden_Oneof = nil
		return
	}
	x.xxx_hidden_Oneof = &parameterValues_OneofDoubleValueWrapper{v}
}

func (x *ParameterValues) SetOneofEnumValue(v ParameterValues_Enum) {
	x.xxx_hidden_Oneof = &parameterValues_OneofEnumValue{v}
}

func (x *ParameterValues) SetNested(v *ParameterValues_Nested) {
	x.xxx_hidden_Nested = v
}

func (x *ParameterValues) SetRecursive(v *ParameterValues) {
	x.xxx_hidden_Recursive = v
}

func (x *ParameterValues) SetStringMap(v map[string]string) {
	x.xxx_hidden_StringMap = v
}

func (x *ParameterValues) SetStringValueMap(v map[string]*wrapperspb.StringValue) {
	x.xxx_hidden_StringValueMap = v
}

func (x *ParameterValues) SetEnumMap(v map[string]ParameterValues_Enum) {
	x.xxx_hidden_EnumMap = v
}

func (x *ParameterValues) SetNestedMap(v map[string]*ParameterValues_Nested) {
	x.xxx_hidden_NestedMap = v
}

func (x *ParameterValues) SetStructValue(v *structpb.Struct) {
	x.xxx_hidden_StructValue = v
}

func (x *ParameterValues) SetValue(v *structpb.Value) {
	x.xxx_hidden_Value = v
}

func (x *ParameterValues) SetRecursiveList(v []*ParameterValues) {
	x.xxx_hidden_RecursiveList = &v
}

func (x *ParameterValues) HasDoubleValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ParameterValues) HasFloatValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *ParameterValues) HasInt32Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ParameterValues) HasInt64Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *ParameterValues) HasUint32Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *ParameterValues) HasUint64Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *ParameterValues) HasSint32Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *ParameterValues) HasSint64Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *ParameterValues) HasFixed32Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *ParameterValues) HasFixed64Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *ParameterValues) HasSfixed32Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *ParameterValues) HasSfixed64Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *ParameterValues) HasBoolValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *ParameterValues) HasStringValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *ParameterValues) HasBytesValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *ParameterValues) HasTimestamp() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Timestamp != nil
}

func (x *ParameterValues) HasDuration() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Duration != nil
}

func (x *ParameterValues) HasBoolValueWrapper() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_BoolValueWrapper != nil
}

func (x *ParameterValues) HasInt32ValueWrapper() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Int32ValueWrapper != nil
}

func (x *ParameterValues) HasInt64ValueWrapper() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Int64ValueWrapper != nil
}

func (x *ParameterValues) HasUint32ValueWrapper() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Uint32ValueWrapper != nil
}

func (x *ParameterValues) HasUint64ValueWrapper() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Uint64ValueWrapper != nil
}

func (x *ParameterValues) HasFloatValueWrapper() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FloatValueWrapper != nil
}

func (x *ParameterValues) HasDoubleValueWrapper() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DoubleValueWrapper != nil
}

func (x *ParameterValues) HasBytesValueWrapper() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_BytesValueWrapper != nil
}

func (x *ParameterValues) HasStringValueWrapper() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StringValueWrapper != nil
}

func (x *ParameterValues) HasFieldMask() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_FieldMask != nil
}

func (x *ParameterValues) HasEnumValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 27)
}

func (x *ParameterValues) HasOneof() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Oneof != nil
}

func (x *ParameterValues) HasOneofDoubleValue() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Oneof.(*parameterValues_OneofDoubleValue)
	return ok
}

func (x *ParameterValues) HasOneofDoubleValueWrapper() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Oneof.(*parameterValues_OneofDoubleValueWrapper)
	return ok
}

func (x *ParameterValues) HasOneofEnumValue() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Oneof.(*parameterValues_OneofEnumValue)
	return ok
}

func (x *ParameterValues) HasNested() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Nested != nil
}

func (x *ParameterValues) HasRecursive() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Recursive != nil
}

func (x *ParameterValues) HasStructValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_StructValue != nil
}

func (x *ParameterValues) HasValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Value != nil
}

func (x *ParameterValues) ClearDoubleValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DoubleValue = 0
}

func (x *ParameterValues) ClearFloatValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FloatValue = 0
}

func (x *ParameterValues) ClearInt32Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Int32Value = 0
}

func (x *ParameterValues) ClearInt64Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Int64Value = 0
}

func (x *ParameterValues) ClearUint32Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Uint32Value = 0
}

func (x *ParameterValues) ClearUint64Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Uint64Value = 0
}

func (x *ParameterValues) ClearSint32Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Sint32Value = 0
}

func (x *ParameterValues) ClearSint64Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Sint64Value = 0
}

func (x *ParameterValues) ClearFixed32Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_Fixed32Value = 0
}

func (x *ParameterValues) ClearFixed64Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_Fixed64Value = 0
}

func (x *ParameterValues) ClearSfixed32Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_Sfixed32Value = 0
}

func (x *ParameterValues) ClearSfixed64Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_Sfixed64Value = 0
}

func (x *ParameterValues) ClearBoolValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_BoolValue = false
}

func (x *ParameterValues) ClearStringValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_StringValue = nil
}

func (x *ParameterValues) ClearBytesValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_BytesValue = nil
}

func (x *ParameterValues) ClearTimestamp() {
	x.xxx_hidden_Timestamp = nil
}

func (x *ParameterValues) ClearDuration() {
	x.xxx_hidden_Duration = nil
}

func (x *ParameterValues) ClearBoolValueWrapper() {
	x.xxx_hidden_BoolValueWrapper = nil
}

func (x *ParameterValues) ClearInt32ValueWrapper() {
	x.xxx_hidden_Int32ValueWrapper = nil
}

func (x *ParameterValues) ClearInt64ValueWrapper() {
	x.xxx_hidden_Int64ValueWrapper = nil
}

func (x *ParameterValues) ClearUint32ValueWrapper() {
	x.xxx_hidden_Uint32ValueWrapper = nil
}

func (x *ParameterValues) ClearUint64ValueWrapper() {
	x.xxx_hidden_Uint64ValueWrapper = nil
}

func (x *ParameterValues) ClearFloatValueWrapper() {
	x.xxx_hidden_FloatValueWrapper = nil
}

func (x *ParameterValues) ClearDoubleValueWrapper() {
	x.xxx_hidden_DoubleValueWrapper = nil
}

func (x *ParameterValues) ClearBytesValueWrapper() {
	x.xxx_hidden_BytesValueWrapper = nil
}

func (x *ParameterValues) ClearStringValueWrapper() {
	x.xxx_hidden_StringValueWrapper = nil
}

func (x *ParameterValues) ClearFieldMask() {
	x.xxx_hidden_FieldMask = nil
}

func (x *ParameterValues) ClearEnumValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 27)
	x.xxx_hidden_EnumValue = ParameterValues_ENUM_UNSPECIFIED
}

func (x *ParameterValues) ClearOneof() {
	x.xxx_hidden_Oneof = nil
}

func (x *ParameterValues) ClearOneofDoubleValue() {
	if _, ok := x.xxx_hidden_Oneof.(*parameterValues_OneofDoubleValue); ok {
		x.xxx_hidden_Oneof = nil
	}
}

func (x *ParameterValues) ClearOneofDoubleValueWrapper() {
	if _, ok := x.xxx_hidden_Oneof.(*parameterValues_OneofDoubleValueWrapper); ok {
		x.xxx_hidden_Oneof = nil
	}
}

func (x *ParameterValues) ClearOneofEnumValue() {
	if _, ok := x.xxx_hidden_Oneof.(*parameterValues_OneofEnumValue); ok {
		x.xxx_hidden_Oneof = nil
	}
}

func (x *ParameterValues) ClearNested() {
	x.xxx_hidden_Nested = nil
}

func (x *ParameterValues) ClearRecursive() {
	x.xxx_hidden_Recursive = nil
}

func (x *ParameterValues) ClearStructValue() {
	x.xxx_hidden_StructValue = nil
}

func (x *ParameterValues) ClearValue() {
	x.xxx_hidden_Value = nil
}

const ParameterValues_Oneof_not_set_case case_ParameterValues_Oneof = 0
const ParameterValues_OneofDoubleValue_case case_ParameterValues_Oneof = 33
const ParameterValues_OneofDoubleValueWrapper_case case_ParameterValues_Oneof = 34
const ParameterValues_OneofEnumValue_case case_ParameterValues_Oneof = 35

func (x *ParameterValues) WhichOneof() case_ParameterValues_Oneof {
	if x == nil {
		return ParameterValues_Oneof_not_set_case
	}
	switch x.xxx_hidden_Oneof.(type) {
	case *parameterValues_OneofDoubleValue:
		return ParameterValues_OneofDoubleValue_case
	case *parameterValues_OneofDoubleValueWrapper:
		return ParameterValues_OneofDoubleValueWrapper_case
	case *parameterValues_OneofEnumValue:
		return ParameterValues_OneofEnumValue_case
	default:
		return ParameterValues_Oneof_not_set_case
	}
}

type ParameterValues_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// scalar types
	DoubleValue   *float64
	FloatValue    *float32
	Int32Value    *int32
	Int64Value    *int64
	Uint32Value   *uint32
	Uint64Value   *uint64
	Sint32Value   *int32
	Sint64Value   *int64
	Fixed32Value  *uint32
	Fixed64Value  *uint64
	Sfixed32Value *int32
	Sfixed64Value *int64
	BoolValue     *bool
	StringValue   *string
	BytesValue    []byte
	// scalar wrappers
	Timestamp          *timestamppb.Timestamp
	Duration           *durationpb.Duration
	BoolValueWrapper   *wrapperspb.BoolValue
	Int32ValueWrapper  *wrapperspb.Int32Value
	Int64ValueWrapper  *wrapperspb.Int64Value
	Uint32ValueWrapper *wrapperspb.UInt32Value
	Uint64ValueWrapper *wrapperspb.UInt64Value
	FloatValueWrapper  *wrapperspb.FloatValue
	DoubleValueWrapper *wrapperspb.DoubleValue
	BytesValueWrapper  *wrapperspb.BytesValue
	StringValueWrapper *wrapperspb.StringValue
	FieldMask          *fieldmaskpb.FieldMask
	EnumValue          *ParameterValues_Enum
	// complex types
	EnumList        []ParameterValues_Enum
	DoubleList      []float64
	DoubleValueList []*wrapperspb.DoubleValue
	// Fields of oneof xxx_hidden_Oneof:
	OneofDoubleValue        *float64
	OneofDoubleValueWrapper *wrapperspb.DoubleValue
	OneofEnumValue          *ParameterValues_Enum
	// -- end of xxx_hidden_Oneof
	Nested    *ParameterValues_Nested
	Recursive *ParameterValues
	// unsupported
	StringMap      map[string]string
	StringValueMap map[string]*wrapperspb.StringValue
	EnumMap        map[string]ParameterValues_Enum
	NestedMap      map[string]*ParameterValues_Nested
	StructValue    *structpb.Struct
	Value          *structpb.Value
	RecursiveList  []*ParameterValues
}

func (b0 ParameterValues_builder) Build() *ParameterValues {
	m0 := &ParameterValues{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DoubleValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 41)
		x.xxx_hidden_DoubleValue = *b.DoubleValue
	}
	if b.FloatValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 41)
		x.xxx_hidden_FloatValue = *b.FloatValue
	}
	if b.Int32Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 41)
		x.xxx_hidden_Int32Value = *b.Int32Value
	}
	if b.Int64Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 41)
		x.xxx_hidden_Int64Value = *b.Int64Value
	}
	if b.Uint32Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 41)
		x.xxx_hidden_Uint32Value = *b.Uint32Value
	}
	if b.Uint64Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 41)
		x.xxx_hidden_Uint64Value = *b.Uint64Value
	}
	if b.Sint32Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 41)
		x.xxx_hidden_Sint32Value = *b.Sint32Value
	}
	if b.Sint64Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 41)
		x.xxx_hidden_Sint64Value = *b.Sint64Value
	}
	if b.Fixed32Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 41)
		x.xxx_hidden_Fixed32Value = *b.Fixed32Value
	}
	if b.Fixed64Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 41)
		x.xxx_hidden_Fixed64Value = *b.Fixed64Value
	}
	if b.Sfixed32Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 41)
		x.xxx_hidden_Sfixed32Value = *b.Sfixed32Value
	}
	if b.Sfixed64Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 41)
		x.xxx_hidden_Sfixed64Value = *b.Sfixed64Value
	}
	if b.BoolValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 41)
		x.xxx_hidden_BoolValue = *b.BoolValue
	}
	if b.StringValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 41)
		x.xxx_hidden_StringValue = b.StringValue
	}
	if b.BytesValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 41)
		x.xxx_hidden_BytesValue = b.BytesValue
	}
	x.xxx_hidden_Timestamp = b.Timestamp
	x.xxx_hidden_Duration = b.Duration
	x.xxx_hidden_BoolValueWrapper = b.BoolValueWrapper
	x.xxx_hidden_Int32ValueWrapper = b.Int32ValueWrapper
	x.xxx_hidden_Int64ValueWrapper = b.Int64ValueWrapper
	x.xxx_hidden_Uint32ValueWrapper = b.Uint32ValueWrapper
	x.xxx_hidden_Uint64ValueWrapper = b.Uint64ValueWrapper
	x.xxx_hidden_FloatValueWrapper = b.FloatValueWrapper
	x.xxx_hidden_DoubleValueWrapper = b.DoubleValueWrapper
	x.xxx_hidden_BytesValueWrapper = b.BytesValueWrapper
	x.xxx_hidden_StringValueWrapper = b.StringValueWrapper
	x.xxx_hidden_FieldMask = b.FieldMask
	if b.EnumValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 27, 41)
		x.xxx_hidden_EnumValue = *b.EnumValue
	}
	x.xxx_hidden_EnumList = b.EnumList
	x.xxx_hidden_DoubleList = b.DoubleList
	x.xxx_hidden_DoubleValueList = &b.DoubleValueList
	if b.OneofDoubleValue != nil {
		x.xxx_hidden_Oneof = &parameterValues_OneofDoubleValue{*b.OneofDoubleValue}
	}
	if b.OneofDoubleValueWrapper != nil {
		x.xxx_hidden_Oneof = &parameterValues_OneofDoubleValueWrapper{b.OneofDoubleValueWrapper}
	}
	if b.OneofEnumValue != nil {
		x.xxx_hidden_Oneof = &parameterValues_OneofEnumValue{*b.OneofEnumValue}
	}
	x.xxx_hidden_Nested = b.Nested
	x.xxx_hidden_Recursive = b.Recursive
	x.xxx_hidden_StringMap = b.StringMap
	x.xxx_hidden_StringValueMap = b.StringValueMap
	x.xxx_hidden_EnumMap = b.EnumMap
	x.xxx_hidden_NestedMap = b.NestedMap
	x.xxx_hidden_StructValue = b.StructValue
	x.xxx_hidden_Value = b.Value
	x.xxx_hidden_RecursiveList = &b.RecursiveList
	return m0
}

type case_ParameterValues_Oneof protoreflect.FieldNumber

func (x case_ParameterValues_Oneof) String() string {
	md := file_test_v1_test_proto_msgTypes[0].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isParameterValues_Oneof interface {
	isParameterValues_Oneof()
}

type parameterValues_OneofDoubleValue struct {
	OneofDoubleValue float64 `protobuf:"fixed64,33,opt,name=oneof_double_value,json=oneofDoubleValue,oneof"`
}

type parameterValues_OneofDoubleValueWrapper struct {
	OneofDoubleValueWrapper *wrapperspb.DoubleValue `protobuf:"bytes,34,opt,name=oneof_double_value_wrapper,json=oneofDoubleValueWrapper,oneof"`
}

type parameterValues_OneofEnumValue struct {
	OneofEnumValue ParameterValues_Enum `protobuf:"varint,35,opt,name=oneof_enum_value,json=oneofEnumValue,enum=test.v1.ParameterValues_Enum,oneof"`
}

func (*parameterValues_OneofDoubleValue) isParameterValues_Oneof() {}

func (*parameterValues_OneofDoubleValueWrapper) isParameterValues_Oneof() {}

func (*parameterValues_OneofEnumValue) isParameterValues_Oneof() {}

type AllTypes struct {
	state                          protoimpl.MessageState   `protogen:"opaque.v1"`
	xxx_hidden_DoubleValue         float64                  `protobuf:"fixed64,1,opt,name=double_value,json=doubleValue"`
	xxx_hidden_FloatValue          float32                  `protobuf:"fixed32,2,opt,name=float_value,json=floatValue"`
	xxx_hidden_Int32Value          int32                    `protobuf:"varint,3,opt,name=int32_value,json=int32Value"`
	xxx_hidden_Int64Value          int64                    `protobuf:"varint,4,opt,name=int64_value,json=int64Value"`
	xxx_hidden_Uint32Value         uint32                   `protobuf:"varint,5,opt,name=uint32_value,json=uint32Value"`
	xxx_hidden_Uint64Value         uint64                   `protobuf:"varint,6,opt,name=uint64_value,json=uint64Value"`
	xxx_hidden_Sint32Value         int32                    `protobuf:"zigzag32,7,opt,name=sint32_value,json=sint32Value"`
	xxx_hidden_Sint64Value         int64                    `protobuf:"zigzag64,8,opt,name=sint64_value,json=sint64Value"`
	xxx_hidden_Fixed32Value        uint32                   `protobuf:"fixed32,9,opt,name=fixed32_value,json=fixed32Value"`
	xxx_hidden_Fixed64Value        uint64                   `protobuf:"fixed64,10,opt,name=fixed64_value,json=fixed64Value"`
	xxx_hidden_Sfixed32Value       int32                    `protobuf:"fixed32,11,opt,name=sfixed32_value,json=sfixed32Value"`
	xxx_hidden_Sfixed64Value       int64                    `protobuf:"fixed64,12,opt,name=sfixed64_value,json=sfixed64Value"`
	xxx_hidden_BoolValue           bool                     `protobuf:"varint,13,opt,name=bool_value,json=boolValue"`
	xxx_hidden_StringValue         *string                  `protobuf:"bytes,14,opt,name=string_value,json=stringValue"`
	xxx_hidden_BytesValue          []byte                   `protobuf:"bytes,15,opt,name=bytes_value,json=bytesValue"`
	xxx_hidden_DoubleList          []float64                `protobuf:"fixed64,16,rep,packed,name=double_list,json=doubleList"`
	xxx_hidden_FloatList           []float32                `protobuf:"fixed32,17,rep,packed,name=float_list,json=floatList"`
	xxx_hidden_Int32List           []int32                  `protobuf:"varint,18,rep,packed,name=int32_list,json=int32List"`
	xxx_hidden_Int64List           []int64                  `protobuf:"varint,19,rep,packed,name=int64_list,json=int64List"`
	xxx_hidden_Uint32List          []uint32                 `protobuf:"varint,20,rep,packed,name=uint32_list,json=uint32List"`
	xxx_hidden_Uint64List          []uint64                 `protobuf:"varint,21,rep,packed,name=uint64_list,json=uint64List"`
	xxx_hidden_Sint32List          []int32                  `protobuf:"zigzag32,22,rep,packed,name=sint32_list,json=sint32List"`
	xxx_hidden_Sint64List          []int64                  `protobuf:"zigzag64,23,rep,packed,name=sint64_list,json=sint64List"`
	xxx_hidden_Fixed32List         []uint32                 `protobuf:"fixed32,24,rep,packed,name=fixed32_list,json=fixed32List"`
	xxx_hidden_Fixed64List         []uint64                 `protobuf:"fixed64,25,rep,packed,name=fixed64_list,json=fixed64List"`
	xxx_hidden_Sfixed32List        []int32                  `protobuf:"fixed32,26,rep,packed,name=sfixed32_list,json=sfixed32List"`
	xxx_hidden_Sfixed64List        []int64                  `protobuf:"fixed64,27,rep,packed,name=sfixed64_list,json=sfixed64List"`
	xxx_hidden_BoolList            []bool                   `protobuf:"varint,28,rep,packed,name=bool_list,json=boolList"`
	xxx_hidden_StringList          []string                 `protobuf:"bytes,29,rep,name=string_list,json=stringList"`
	xxx_hidden_BytesList           [][]byte                 `protobuf:"bytes,30,rep,name=bytes_list,json=bytesList"`
	xxx_hidden_Int32ToStringMap    map[int32]string         `protobuf:"bytes,31,rep,name=int32_to_string_map,json=int32ToStringMap" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Int64ToStringMap    map[int64]string         `protobuf:"bytes,32,rep,name=int64_to_string_map,json=int64ToStringMap" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Uint32ToStringMap   map[uint32]string        `protobuf:"bytes,33,rep,name=uint32_to_string_map,json=uint32ToStringMap" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Uint64ToStringMap   map[uint64]string        `protobuf:"bytes,34,rep,name=uint64_to_string_map,json=uint64ToStringMap" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Sint32ToStringMap   map[int32]string         `protobuf:"bytes,35,rep,name=sint32_to_string_map,json=sint32ToStringMap" protobuf_key:"zigzag32,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Sint64ToStringMap   map[int64]string         `protobuf:"bytes,36,rep,name=sint64_to_string_map,json=sint64ToStringMap" protobuf_key:"zigzag64,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Fixed32ToStringMap  map[uint32]string        `protobuf:"bytes,37,rep,name=fixed32_to_string_map,json=fixed32ToStringMap" protobuf_key:"fixed32,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Fixed64ToStringMap  map[uint64]string        `protobuf:"bytes,38,rep,name=fixed64_to_string_map,json=fixed64ToStringMap" protobuf_key:"fixed64,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Sfixed32ToStringMap map[int32]string         `protobuf:"bytes,39,rep,name=sfixed32_to_string_map,json=sfixed32ToStringMap" protobuf_key:"fixed32,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_Sfixed64ToStringMap map[int64]string         `protobuf:"bytes,40,rep,name=sfixed64_to_string_map,json=sfixed64ToStringMap" protobuf_key:"fixed64,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_BoolToStringMap     map[bool]string          `protobuf:"bytes,41,rep,name=bool_to_string_map,json=boolToStringMap" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_StringToStringMap   map[string]string        `protobuf:"bytes,42,rep,name=string_to_string_map,json=stringToStringMap" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_DoubleMap           map[string]float64       `protobuf:"bytes,43,rep,name=double_map,json=doubleMap" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	xxx_hidden_FloatMap            map[string]float32       `protobuf:"bytes,44,rep,name=float_map,json=floatMap" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	xxx_hidden_Int32Map            map[string]int32         `protobuf:"bytes,45,rep,name=int32_map,json=int32Map" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	xxx_hidden_Int64Map            map[string]int64         `protobuf:"bytes,46,rep,name=int64_map,json=int64Map" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	xxx_hidden_Uint32Map           map[string]uint32        `protobuf:"bytes,47,rep,name=uint32_map,json=uint32Map" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	xxx_hidden_Uint64Map           map[string]uint64        `protobuf:"bytes,48,rep,name=uint64_map,json=uint64Map" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	xxx_hidden_Sint32Map           map[string]int32         `protobuf:"bytes,49,rep,name=sint32_map,json=sint32Map" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"zigzag32,2,opt,name=value"`
	xxx_hidden_Sint64Map           map[string]int64         `protobuf:"bytes,50,rep,name=sint64_map,json=sint64Map" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"zigzag64,2,opt,name=value"`
	xxx_hidden_Fixed32Map          map[string]uint32        `protobuf:"bytes,51,rep,name=fixed32_map,json=fixed32Map" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	xxx_hidden_Fixed64Map          map[string]uint64        `protobuf:"bytes,52,rep,name=fixed64_map,json=fixed64Map" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	xxx_hidden_Sfixed32Map         map[string]int32         `protobuf:"bytes,53,rep,name=sfixed32_map,json=sfixed32Map" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	xxx_hidden_Sfixed64Map         map[string]int64         `protobuf:"bytes,54,rep,name=sfixed64_map,json=sfixed64Map" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	xxx_hidden_BoolMap             map[string]bool          `protobuf:"bytes,55,rep,name=bool_map,json=boolMap" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	xxx_hidden_StringMap           map[string]string        `protobuf:"bytes,56,rep,name=string_map,json=stringMap" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_BytesMap            map[string][]byte        `protobuf:"bytes,57,rep,name=bytes_map,json=bytesMap" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_OptDoubleValue      float64                  `protobuf:"fixed64,58,opt,name=opt_double_value,json=optDoubleValue"`
	xxx_hidden_OptFloatValue       float32                  `protobuf:"fixed32,59,opt,name=opt_float_value,json=optFloatValue"`
	xxx_hidden_OptInt32Value       int32                    `protobuf:"varint,60,opt,name=opt_int32_value,json=optInt32Value"`
	xxx_hidden_OptInt64Value       int64                    `protobuf:"varint,61,opt,name=opt_int64_value,json=optInt64Value"`
	xxx_hidden_OptUint32Value      uint32                   `protobuf:"varint,62,opt,name=opt_uint32_value,json=optUint32Value"`
	xxx_hidden_OptUint64Value      uint64                   `protobuf:"varint,63,opt,name=opt_uint64_value,json=optUint64Value"`
	xxx_hidden_OptSint32Value      int32                    `protobuf:"zigzag32,64,opt,name=opt_sint32_value,json=optSint32Value"`
	xxx_hidden_OptSint64Value      int64                    `protobuf:"zigzag64,65,opt,name=opt_sint64_value,json=optSint64Value"`
	xxx_hidden_OptFixed32Value     uint32                   `protobuf:"fixed32,66,opt,name=opt_fixed32_value,json=optFixed32Value"`
	xxx_hidden_OptFixed64Value     uint64                   `protobuf:"fixed64,67,opt,name=opt_fixed64_value,json=optFixed64Value"`
	xxx_hidden_OptSfixed32Value    int32                    `protobuf:"fixed32,68,opt,name=opt_sfixed32_value,json=optSfixed32Value"`
	xxx_hidden_OptSfixed64Value    int64                    `protobuf:"fixed64,69,opt,name=opt_sfixed64_value,json=optSfixed64Value"`
	xxx_hidden_OptBoolValue        bool                     `protobuf:"varint,70,opt,name=opt_bool_value,json=optBoolValue"`
	xxx_hidden_OptStringValue      *string                  `protobuf:"bytes,71,opt,name=opt_string_value,json=optStringValue"`
	xxx_hidden_OptBytesValue       []byte                   `protobuf:"bytes,72,opt,name=opt_bytes_value,json=optBytesValue"`
	xxx_hidden_MsgValue            *AllTypes                `protobuf:"bytes,73,opt,name=msg_value,json=msgValue"`
	xxx_hidden_EnumValue           AllTypes_Enum            `protobuf:"varint,74,opt,name=enum_value,json=enumValue,enum=test.v1.AllTypes_Enum"`
	xxx_hidden_OptMsgValue         *AllTypes                `protobuf:"bytes,75,opt,name=opt_msg_value,json=optMsgValue"`
	xxx_hidden_OptEnumValue        AllTypes_Enum            `protobuf:"varint,76,opt,name=opt_enum_value,json=optEnumValue,enum=test.v1.AllTypes_Enum"`
	xxx_hidden_MsgList             *[]*AllTypes             `protobuf:"bytes,77,rep,name=msg_list,json=msgList"`
	xxx_hidden_EnumList            []AllTypes_Enum          `protobuf:"varint,78,rep,packed,name=enum_list,json=enumList,enum=test.v1.AllTypes_Enum"`
	xxx_hidden_MsgMap              map[string]*AllTypes     `protobuf:"bytes,79,rep,name=msg_map,json=msgMap" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	xxx_hidden_EnumMap             map[string]AllTypes_Enum `protobuf:"bytes,80,rep,name=enum_map,json=enumMap" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=test.v1.AllTypes_Enum"`
	xxx_hidden_Option              isAllTypes_Option        `protobuf_oneof:"option"`
	XXX_raceDetectHookData         protoimpl.RaceDetectHookData
	XXX_presence                   [3]uint32
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *AllTypes) Reset() {
	*x = AllTypes{}
	mi := &file_test_v1_test_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllTypes) ProtoMessage() {}

func (x *AllTypes) ProtoReflect() protoreflect.Message {
	mi := &file_test_v1_test_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *AllTypes) GetDoubleValue() float64 {
	if x != nil {
		return x.xxx_hidden_DoubleValue
	}
	return 0
}

func (x *AllTypes) GetFloatValue() float32 {
	if x != nil {
		return x.xxx_hidden_FloatValue
	}
	return 0
}

func (x *AllTypes) GetInt32Value() int32 {
	if x != nil {
		return x.xxx_hidden_Int32Value
	}
	return 0
}

func (x *AllTypes) GetInt64Value() int64 {
	if x != nil {
		return x.xxx_hidden_Int64Value
	}
	return 0
}

func (x *AllTypes) GetUint32Value() uint32 {
	if x != nil {
		return x.xxx_hidden_Uint32Value
	}
	return 0
}

func (x *AllTypes) GetUint64Value() uint64 {
	if x != nil {
		return x.xxx_hidden_Uint64Value
	}
	return 0
}

func (x *AllTypes) GetSint32Value() int32 {
	if x != nil {
		return x.xxx_hidden_Sint32Value
	}
	return 0
}

func (x *AllTypes) GetSint64Value() int64 {
	if x != nil {
		return x.xxx_hidden_Sint64Value
	}
	return 0
}

func (x *AllTypes) GetFixed32Value() uint32 {
	if x != nil {
		return x.xxx_hidden_Fixed32Value
	}
	return 0
}

func (x *AllTypes) GetFixed64Value() uint64 {
	if x != nil {
		return x.xxx_hidden_Fixed64Value
	}
	return 0
}

func (x *AllTypes) GetSfixed32Value() int32 {
	if x != nil {
		return x.xxx_hidden_Sfixed32Value
	}
	return 0
}

func (x *AllTypes) GetSfixed64Value() int64 {
	if x != nil {
		return x.xxx_hidden_Sfixed64Value
	}
	return 0
}

func (x *AllTypes) GetBoolValue() bool {
	if x != nil {
		return x.xxx_hidden_BoolValue
	}
	return false
}

func (x *AllTypes) GetStringValue() string {
	if x != nil {
		if x.xxx_hidden_StringValue != nil {
			return *x.xxx_hidden_StringValue
		}
		return ""
	}
	return ""
}

func (x *AllTypes) GetBytesValue() []byte {
	if x != nil {
		return x.xxx_hidden_BytesValue
	}
	return nil
}

func (x *AllTypes) GetDoubleList() []float64 {
	if x != nil {
		return x.xxx_hidden_DoubleList
	}
	return nil
}

func (x *AllTypes) GetFloatList() []float32 {
	if x != nil {
		return x.xxx_hidden_FloatList
	}
	return nil
}

func (x *AllTypes) GetInt32List() []int32 {
	if x != nil {
		return x.xxx_hidden_Int32List
	}
	return nil
}

func (x *AllTypes) GetInt64List() []int64 {
	if x != nil {
		return x.xxx_hidden_Int64List
	}
	return nil
}

func (x *AllTypes) GetUint32List() []uint32 {
	if x != nil {
		return x.xxx_hidden_Uint32List
	}
	return nil
}

func (x *AllTypes) GetUint64List() []uint64 {
	if x != nil {
		return x.xxx_hidden_Uint64List
	}
	return nil
}

func (x *AllTypes) GetSint32List() []int32 {
	if x != nil {
		return x.xxx_hidden_Sint32List
	}
	return nil
}

func (x *AllTypes) GetSint64List() []int64 {
	if x != nil {
		return x.xxx_hidden_Sint64List
	}
	return nil
}

func (x *AllTypes) GetFixed32List() []uint32 {
	if x != nil {
		return x.xxx_hidden_Fixed32List
	}
	return nil
}

func (x *AllTypes) GetFixed64List() []uint64 {
	if x != nil {
		return x.xxx_hidden_Fixed64List
	}
	return nil
}

func (x *AllTypes) GetSfixed32List() []int32 {
	if x != nil {
		return x.xxx_hidden_Sfixed32List
	}
	return nil
}

func (x *AllTypes) GetSfixed64List() []int64 {
	if x != nil {
		return x.xxx_hidden_Sfixed64List
	}
	return nil
}

func (x *AllTypes) GetBoolList() []bool {
	if x != nil {
		return x.xxx_hidden_BoolList
	}
	return nil
}

func (x *AllTypes) GetStringList() []string {
	if x != nil {
		return x.xxx_hidden_StringList
	}
	return nil
}

func (x *AllTypes) GetBytesList() [][]byte {
	if x != nil {
		return x.xxx_hidden_BytesList
	}
	return nil
}

func (x *AllTypes) GetInt32ToStringMap() map[int32]string {
	if x != nil {
		return x.xxx_hidden_Int32ToStringMap
	}
	return nil
}

func (x *AllTypes) GetInt64ToStringMap() map[int64]string {
	if x != nil {
		return x.xxx_hidden_Int64ToStringMap
	}
	return nil
}

func (x *AllTypes) GetUint32ToStringMap() map[uint32]string {
	if x != nil {
		return x.xxx_hidden_Uint32ToStringMap
	}
	return nil
}

func (x *AllTypes) GetUint64ToStringMap() map[uint64]string {
	if x != nil {
		return x.xxx_hidden_Uint64ToStringMap
	}
	return nil
}

func (x *AllTypes) GetSint32ToStringMap() map[int32]string {
	if x != nil {
		return x.xxx_hidden_Sint32ToStringMap
	}
	return nil
}

func (x *AllTypes) GetSint64ToStringMap() map[int64]string {
	if x != nil {
		return x.xxx_hidden_Sint64ToStringMap
	}
	return nil
}

func (x *AllTypes) GetFixed32ToStringMap() map[uint32]string {
	if x != nil {
		return x.xxx_hidden_Fixed32ToStringMap
	}
	return nil
}

func (x *AllTypes) GetFixed64ToStringMap() map[uint64]string {
	if x != nil {
		return x.xxx_hidden_Fixed64ToStringMap
	}
	return nil
}

func (x *AllTypes) GetSfixed32ToStringMap() map[int32]string {
	if x != nil {
		return x.xxx_hidden_Sfixed32ToStringMap
	}
	return nil
}

func (x *AllTypes) GetSfixed64ToStringMap() map[int64]string {
	if x != nil {
		return x.xxx_hidden_Sfixed64ToStringMap
	}
	return nil
}

func (x *AllTypes) GetBoolToStringMap() map[bool]string {
	if x != nil {
		return x.xxx_hidden_BoolToStringMap
	}
	return nil
}

func (x *AllTypes) GetStringToStringMap() map[string]string {
	if x != nil {
		return x.xxx_hidden_StringToStringMap
	}
	return nil
}

func (x *AllTypes) GetDoubleMap() map[string]float64 {
	if x != nil {
		return x.xxx_hidden_DoubleMap
	}
	return nil
}

func (x *AllTypes) GetFloatMap() map[string]float32 {
	if x != nil {
		return x.xxx_hidden_FloatMap
	}
	return nil
}

func (x *AllTypes) GetInt32Map() map[string]int32 {
	if x != nil {
		return x.xxx_hidden_Int32Map
	}
	return nil
}

func (x *AllTypes) GetInt64Map() map[string]int64 {
	if x != nil {
		return x.xxx_hidden_Int64Map
	}
	return nil
}

func (x *AllTypes) GetUint32Map() map[string]uint32 {
	if x != nil {
		return x.xxx_hidden_Uint32Map
	}
	return nil
}

func (x *AllTypes) GetUint64Map() map[string]uint64 {
	if x != nil {
		return x.xxx_hidden_Uint64Map
	}
	return nil
}

func (x *AllTypes) GetSint32Map() map[string]int32 {
	if x != nil {
		return x.xxx_hidden_Sint32Map
	}
	return nil
}

func (x *AllTypes) GetSint64Map() map[string]int64 {
	if x != nil {
		return x.xxx_hidden_Sint64Map
	}
	return nil
}

func (x *AllTypes) GetFixed32Map() map[string]uint32 {
	if x != nil {
		return x.xxx_hidden_Fixed32Map
	}
	return nil
}

func (x *AllTypes) GetFixed64Map() map[string]uint64 {
	if x != nil {
		return x.xxx_hidden_Fixed64Map
	}
	return nil
}

func (x *AllTypes) GetSfixed32Map() map[string]int32 {
	if x != nil {
		return x.xxx_hidden_Sfixed32Map
	}
	return nil
}

func (x *AllTypes) GetSfixed64Map() map[string]int64 {
	if x != nil {
		return x.xxx_hidden_Sfixed64Map
	}
	return nil
}

func (x *AllTypes) GetBoolMap() map[string]bool {
	if x != nil {
		return x.xxx_hidden_BoolMap
	}
	return nil
}

func (x *AllTypes) GetStringMap() map[string]string {
	if x != nil {
		return x.xxx_hidden_StringMap
	}
	return nil
}

func (x *AllTypes) GetBytesMap() map[string][]byte {
	if x != nil {
		return x.xxx_hidden_BytesMap
	}
	return nil
}

func (x *AllTypes) GetOptDoubleValue() float64 {
	if x != nil {
		return x.xxx_hidden_OptDoubleValue
	}
	return 0
}

func (x *AllTypes) GetOptFloatValue() float32 {
	if x != nil {
		return x.xxx_hidden_OptFloatValue
	}
	return 0
}

func (x *AllTypes) GetOptInt32Value() int32 {
	if x != nil {
		return x.xxx_hidden_OptInt32Value
	}
	return 0
}

func (x *AllTypes) GetOptInt64Value() int64 {
	if x != nil {
		return x.xxx_hidden_OptInt64Value
	}
	return 0
}

func (x *AllTypes) GetOptUint32Value() uint32 {
	if x != nil {
		return x.xxx_hidden_OptUint32Value
	}
	return 0
}

func (x *AllTypes) GetOptUint64Value() uint64 {
	if x != nil {
		return x.xxx_hidden_OptUint64Value
	}
	return 0
}

func (x *AllTypes) GetOptSint32Value() int32 {
	if x != nil {
		return x.xxx_hidden_OptSint32Value
	}
	return 0
}

func (x *AllTypes) GetOptSint64Value() int64 {
	if x != nil {
		return x.xxx_hidden_OptSint64Value
	}
	return 0
}

func (x *AllTypes) GetOptFixed32Value() uint32 {
	if x != nil {
		return x.xxx_hidden_OptFixed32Value
	}
	return 0
}

func (x *AllTypes) GetOptFixed64Value() uint64 {
	if x != nil {
		return x.xxx_hidden_OptFixed64Value
	}
	return 0
}

func (x *AllTypes) GetOptSfixed32Value() int32 {
	if x != nil {
		return x.xxx_hidden_OptSfixed32Value
	}
	return 0
}

func (x *AllTypes) GetOptSfixed64Value() int64 {
	if x != nil {
		return x.xxx_hidden_OptSfixed64Value
	}
	return 0
}

func (x *AllTypes) GetOptBoolValue() bool {
	if x != nil {
		return x.xxx_hidden_OptBoolValue
	}
	return false
}

func (x *AllTypes) GetOptStringValue() string {
	if x != nil {
		if x.xxx_hidden_OptStringValue != nil {
			return *x.xxx_hidden_OptStringValue
		}
		return ""
	}
	return ""
}

func (x *AllTypes) GetOptBytesValue() []byte {
	if x != nil {
		return x.xxx_hidden_OptBytesValue
	}
	return nil
}

func (x *AllTypes) GetMsgValue() *AllTypes {
	if x != nil {
		return x.xxx_hidden_MsgValue
	}
	return nil
}

func (x *AllTypes) GetEnumValue() AllTypes_Enum {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[2]), 73) {
			return x.xxx_hidden_EnumValue
		}
	}
	return AllTypes_ENUM_UNSPECIFIED
}

func (x *AllTypes) GetOptMsgValue() *AllTypes {
	if x != nil {
		return x.xxx_hidden_OptMsgValue
	}
	return nil
}

func (x *AllTypes) GetOptEnumValue() AllTypes_Enum {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[2]), 75) {
			return x.xxx_hidden_OptEnumValue
		}
	}
	return AllTypes_ENUM_UNSPECIFIED
}

func (x *AllTypes) GetMsgList() []*AllTypes {
	if x != nil {
		if x.xxx_hidden_MsgList != nil {
			return *x.xxx_hidden_MsgList
		}
	}
	return nil
}

func (x *AllTypes) GetEnumList() []AllTypes_Enum {
	if x != nil {
		return x.xxx_hidden_EnumList
	}
	return nil
}

func (x *AllTypes) GetMsgMap() map[string]*AllTypes {
	if x != nil {
		return x.xxx_hidden_MsgMap
	}
	return nil
}

func (x *AllTypes) GetEnumMap() map[string]AllTypes_Enum {
	if x != nil {
		return x.xxx_hidden_EnumMap
	}
	return nil
}

func (x *AllTypes) GetDoubleOption() float64 {
	if x != nil {
		if x, ok := x.xxx_hidden_Option.(*allTypes_DoubleOption); ok {
			return x.DoubleOption
		}
	}
	return 0
}

func (x *AllTypes) GetFloatOption() float32 {
	if x != nil {
		if x, ok := x.xxx_hidden_Option.(*allTypes_FloatOption); ok {
			return x.FloatOption
		}
	}
	return 0
}

func (x *AllTypes) GetInt32Option() int32 {
	if x != nil {
		if x, ok := x.xxx_hidden_Option.(*allTypes_Int32Option); ok {
			return x.Int32Option
		}
	}
	return 0
}

func (x *AllTypes) GetInt64Option() int64 {
	if x != nil {
		if x, ok := x.xxx_hidden_Option.(*allTypes_Int64Option); ok {
			return x.Int64Option
		}
	}
	return 0
}

func (x *AllTypes) GetUint32Option() uint32 {
	if x != nil {
		if x, ok := x.xxx_hidden_Option.(*allTypes_Uint32Option); ok {
			return x.Uint32Option
		}
	}
	return 0
}

func (x *AllTypes) GetUint64Option() uint64 {
	if x != nil {
		if x, ok := x.xxx_hidden_Option.(*allTypes_Uint64Option); ok {
			return x.Uint64Option
		}
	}
	return 0
}

func (x *AllTypes) GetSint32Option() int32 {
	if x != nil {
		if x, ok := x.xxx_hidden_Option.(*allTypes_Sint32Option); ok {
			return x.Sint32Option
		}
	}
	return 0
}

func (x *AllTypes) GetSint64Option() int64 {
	if x != nil {
		if x, ok := x.xxx_hidden_Option.(*allTypes_Sint64Option); ok {
			return x.Sint64Option
		}
	}
	return 0
}

func (x *AllTypes) GetFixed32Option() uint32 {
	if x != nil {
		if x, ok := x.xxx_hidden_Option.(*allTypes_Fixed32Option); ok {
			return x.Fixed32Option
		}
	}
	return 0
}

func (x *AllTypes) GetFixed64Option() uint64 {
	if x != nil {
		if x, ok := x.xxx_hidden_Option.(*allTypes_Fixed64Option); ok {
			return x.Fixed64Option
		}
	}
	return 0
}

func (x *AllTypes) GetSfixed32Option() int32 {
	if x != nil {
		if x, ok := x.xxx_hidden_Option.(*allTypes_Sfixed32Option); ok {
			return x.Sfixed32Option
		}
	}
	return 0
}

func (x *AllTypes) GetSfixed64Option() int64 {
	if x != nil {
		if x, ok := x.xxx_hidden_Option.(*allTypes_Sfixed64Option); ok {
			return x.Sfixed64Option
		}
	}
	return 0
}

func (x *AllTypes) GetBoolOption() bool {
	if x != nil {
		if x, ok := x.xxx_hidden_Option.(*allTypes_BoolOption); ok {
			return x.BoolOption
		}
	}
	return false
}

func (x *AllTypes) GetStringOption() string {
	if x != nil {
		if x, ok := x.xxx_hidden_Option.(*allTypes_StringOption); ok {
			return x.StringOption
		}
	}
	return ""
}

func (x *AllTypes) GetBytesOption() []byte {
	if x != nil {
		if x, ok := x.xxx_hidden_Option.(*allTypes_BytesOption); ok {
			return x.BytesOption
		}
	}
	return nil
}

func (x *AllTypes) GetMsgOption() *AllTypes {
	if x != nil {
		if x, ok := x.xxx_hidden_Option.(*allTypes_MsgOption); ok {
			return x.MsgOption
		}
	}
	return nil
}

func (x *AllTypes) GetEnumOption() AllTypes_Enum {
	if x != nil {
		if x, ok := x.xxx_hidden_Option.(*allTypes_EnumOption); ok {
			return x.EnumOption
		}
	}
	return AllTypes_ENUM_UNSPECIFIED
}

func (x *AllTypes) SetDoubleValue(v float64) {
	x.xxx_hidden_DoubleValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 81)
}

func (x *AllTypes) SetFloatValue(v float32) {
	x.xxx_hidden_FloatValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 81)
}

func (x *AllTypes) SetInt32Value(v int32) {
	x.xxx_hidden_Int32Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 81)
}

func (x *AllTypes) SetInt64Value(v int64) {
	x.xxx_hidden_Int64Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 81)
}

func (x *AllTypes) SetUint32Value(v uint32) {
	x.xxx_hidden_Uint32Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 81)
}

func (x *AllTypes) SetUint64Value(v uint64) {
	x.xxx_hidden_Uint64Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 5, 81)
}

func (x *AllTypes) SetSint32Value(v int32) {
	x.xxx_hidden_Sint32Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 6, 81)
}

func (x *AllTypes) SetSint64Value(v int64) {
	x.xxx_hidden_Sint64Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 7, 81)
}

func (x *AllTypes) SetFixed32Value(v uint32) {
	x.xxx_hidden_Fixed32Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 8, 81)
}

func (x *AllTypes) SetFixed64Value(v uint64) {
	x.xxx_hidden_Fixed64Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 9, 81)
}

func (x *AllTypes) SetSfixed32Value(v int32) {
	x.xxx_hidden_Sfixed32Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 10, 81)
}

func (x *AllTypes) SetSfixed64Value(v int64) {
	x.xxx_hidden_Sfixed64Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 11, 81)
}

func (x *AllTypes) SetBoolValue(v bool) {
	x.xxx_hidden_BoolValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 12, 81)
}

func (x *AllTypes) SetStringValue(v string) {
	x.xxx_hidden_StringValue = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 13, 81)
}

func (x *AllTypes) SetBytesValue(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_BytesValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 14, 81)
}

func (x *AllTypes) SetDoubleList(v []float64) {
	x.xxx_hidden_DoubleList = v
}

func (x *AllTypes) SetFloatList(v []float32) {
	x.xxx_hidden_FloatList = v
}

func (x *AllTypes) SetInt32List(v []int32) {
	x.xxx_hidden_Int32List = v
}

func (x *AllTypes) SetInt64List(v []int64) {
	x.xxx_hidden_Int64List = v
}

func (x *AllTypes) SetUint32List(v []uint32) {
	x.xxx_hidden_Uint32List = v
}

func (x *AllTypes) SetUint64List(v []uint64) {
	x.xxx_hidden_Uint64List = v
}

func (x *AllTypes) SetSint32List(v []int32) {
	x.xxx_hidden_Sint32List = v
}

func (x *AllTypes) SetSint64List(v []int64) {
	x.xxx_hidden_Sint64List = v
}

func (x *AllTypes) SetFixed32List(v []uint32) {
	x.xxx_hidden_Fixed32List = v
}

func (x *AllTypes) SetFixed64List(v []uint64) {
	x.xxx_hidden_Fixed64List = v
}

func (x *AllTypes) SetSfixed32List(v []int32) {
	x.xxx_hidden_Sfixed32List = v
}

func (x *AllTypes) SetSfixed64List(v []int64) {
	x.xxx_hidden_Sfixed64List = v
}

func (x *AllTypes) SetBoolList(v []bool) {
	x.xxx_hidden_BoolList = v
}

func (x *AllTypes) SetStringList(v []string) {
	x.xxx_hidden_StringList = v
}

func (x *AllTypes) SetBytesList(v [][]byte) {
	x.xxx_hidden_BytesList = v
}

func (x *AllTypes) SetInt32ToStringMap(v map[int32]string) {
	x.xxx_hidden_Int32ToStringMap = v
}

func (x *AllTypes) SetInt64ToStringMap(v map[int64]string) {
	x.xxx_hidden_Int64ToStringMap = v
}

func (x *AllTypes) SetUint32ToStringMap(v map[uint32]string) {
	x.xxx_hidden_Uint32ToStringMap = v
}

func (x *AllTypes) SetUint64ToStringMap(v map[uint64]string) {
	x.xxx_hidden_Uint64ToStringMap = v
}

func (x *AllTypes) SetSint32ToStringMap(v map[int32]string) {
	x.xxx_hidden_Sint32ToStringMap = v
}

func (x *AllTypes) SetSint64ToStringMap(v map[int64]string) {
	x.xxx_hidden_Sint64ToStringMap = v
}

func (x *AllTypes) SetFixed32ToStringMap(v map[uint32]string) {
	x.xxx_hidden_Fixed32ToStringMap = v
}

func (x *AllTypes) SetFixed64ToStringMap(v map[uint64]string) {
	x.xxx_hidden_Fixed64ToStringMap = v
}

func (x *AllTypes) SetSfixed32ToStringMap(v map[int32]string) {
	x.xxx_hidden_Sfixed32ToStringMap = v
}

func (x *AllTypes) SetSfixed64ToStringMap(v map[int64]string) {
	x.xxx_hidden_Sfixed64ToStringMap = v
}

func (x *AllTypes) SetBoolToStringMap(v map[bool]string) {
	x.xxx_hidden_BoolToStringMap = v
}

func (x *AllTypes) SetStringToStringMap(v map[string]string) {
	x.xxx_hidden_StringToStringMap = v
}

func (x *AllTypes) SetDoubleMap(v map[string]float64) {
	x.xxx_hidden_DoubleMap = v
}

func (x *AllTypes) SetFloatMap(v map[string]float32) {
	x.xxx_hidden_FloatMap = v
}

func (x *AllTypes) SetInt32Map(v map[string]int32) {
	x.xxx_hidden_Int32Map = v
}

func (x *AllTypes) SetInt64Map(v map[string]int64) {
	x.xxx_hidden_Int64Map = v
}

func (x *AllTypes) SetUint32Map(v map[string]uint32) {
	x.xxx_hidden_Uint32Map = v
}

func (x *AllTypes) SetUint64Map(v map[string]uint64) {
	x.xxx_hidden_Uint64Map = v
}

func (x *AllTypes) SetSint32Map(v map[string]int32) {
	x.xxx_hidden_Sint32Map = v
}

func (x *AllTypes) SetSint64Map(v map[string]int64) {
	x.xxx_hidden_Sint64Map = v
}

func (x *AllTypes) SetFixed32Map(v map[string]uint32) {
	x.xxx_hidden_Fixed32Map = v
}

func (x *AllTypes) SetFixed64Map(v map[string]uint64) {
	x.xxx_hidden_Fixed64Map = v
}

func (x *AllTypes) SetSfixed32Map(v map[string]int32) {
	x.xxx_hidden_Sfixed32Map = v
}

func (x *AllTypes) SetSfixed64Map(v map[string]int64) {
	x.xxx_hidden_Sfixed64Map = v
}

func (x *AllTypes) SetBoolMap(v map[string]bool) {
	x.xxx_hidden_BoolMap = v
}

func (x *AllTypes) SetStringMap(v map[string]string) {
	x.xxx_hidden_StringMap = v
}

func (x *AllTypes) SetBytesMap(v map[string][]byte) {
	x.xxx_hidden_BytesMap = v
}

func (x *AllTypes) SetOptDoubleValue(v float64) {
	x.xxx_hidden_OptDoubleValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[1]), 57, 81)
}

func (x *AllTypes) SetOptFloatValue(v float32) {
	x.xxx_hidden_OptFloatValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[1]), 58, 81)
}

func (x *AllTypes) SetOptInt32Value(v int32) {
	x.xxx_hidden_OptInt32Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[1]), 59, 81)
}

func (x *AllTypes) SetOptInt64Value(v int64) {
	x.xxx_hidden_OptInt64Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[1]), 60, 81)
}

func (x *AllTypes) SetOptUint32Value(v uint32) {
	x.xxx_hidden_OptUint32Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[1]), 61, 81)
}

func (x *AllTypes) SetOptUint64Value(v uint64) {
	x.xxx_hidden_OptUint64Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[1]), 62, 81)
}

func (x *AllTypes) SetOptSint32Value(v int32) {
	x.xxx_hidden_OptSint32Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[1]), 63, 81)
}

func (x *AllTypes) SetOptSint64Value(v int64) {
	x.xxx_hidden_OptSint64Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[2]), 64, 81)
}

func (x *AllTypes) SetOptFixed32Value(v uint32) {
	x.xxx_hidden_OptFixed32Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[2]), 65, 81)
}

func (x *AllTypes) SetOptFixed64Value(v uint64) {
	x.xxx_hidden_OptFixed64Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[2]), 66, 81)
}

func (x *AllTypes) SetOptSfixed32Value(v int32) {
	x.xxx_hidden_OptSfixed32Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[2]), 67, 81)
}

func (x *AllTypes) SetOptSfixed64Value(v int64) {
	x.xxx_hidden_OptSfixed64Value = v
	protoimpl.X.SetPresent(&(x.XXX_presence[2]), 68, 81)
}

func (x *AllTypes) SetOptBoolValue(v bool) {
	x.xxx_hidden_OptBoolValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[2]), 69, 81)
}

func (x *AllTypes) SetOptStringValue(v string) {
	x.xxx_hidden_OptStringValue = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[2]), 70, 81)
}

func (x *AllTypes) SetOptBytesValue(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_OptBytesValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[2]), 71, 81)
}

func (x *AllTypes) SetMsgValue(v *AllTypes) {
	x.xxx_hidden_MsgValue = v
}

func (x *AllTypes) SetEnumValue(v AllTypes_Enum) {
	x.xxx_hidden_EnumValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[2]), 73, 81)
}

func (x *AllTypes) SetOptMsgValue(v *AllTypes) {
	x.xxx_hidden_OptMsgValue = v
}

func (x *AllTypes) SetOptEnumValue(v AllTypes_Enum) {
	x.xxx_hidden_OptEnumValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[2]), 75, 81)
}

func (x *AllTypes) SetMsgList(v []*AllTypes) {
	x.xxx_hidden_MsgList = &v
}

func (x *AllTypes) SetEnumList(v []AllTypes_Enum) {
	x.xxx_hidden_EnumList = v
}

func (x *AllTypes) SetMsgMap(v map[string]*AllTypes) {
	x.xxx_hidden_MsgMap = v
}

func (x *AllTypes) SetEnumMap(v map[string]AllTypes_Enum) {
	x.xxx_hidden_EnumMap = v
}

func (x *AllTypes) SetDoubleOption(v float64) {
	x.xxx_hidden_Option = &allTypes_DoubleOption{v}
}

func (x *AllTypes) SetFloatOption(v float32) {
	x.xxx_hidden_Option = &allTypes_FloatOption{v}
}

func (x *AllTypes) SetInt32Option(v int32) {
	x.xxx_hidden_Option = &allTypes_Int32Option{v}
}

func (x *AllTypes) SetInt64Option(v int64) {
	x.xxx_hidden_Option = &allTypes_Int64Option{v}
}

func (x *AllTypes) SetUint32Option(v uint32) {
	x.xxx_hidden_Option = &allTypes_Uint32Option{v}
}

func (x *AllTypes) SetUint64Option(v uint64) {
	x.xxx_hidden_Option = &allTypes_Uint64Option{v}
}

func (x *AllTypes) SetSint32Option(v int32) {
	x.xxx_hidden_Option = &allTypes_Sint32Option{v}
}

func (x *AllTypes) SetSint64Option(v int64) {
	x.xxx_hidden_Option = &allTypes_Sint64Option{v}
}

func (x *AllTypes) SetFixed32Option(v uint32) {
	x.xxx_hidden_Option = &allTypes_Fixed32Option{v}
}

func (x *AllTypes) SetFixed64Option(v uint64) {
	x.xxx_hidden_Option = &allTypes_Fixed64Option{v}
}

func (x *AllTypes) SetSfixed32Option(v int32) {
	x.xxx_hidden_Option = &allTypes_Sfixed32Option{v}
}

func (x *AllTypes) SetSfixed64Option(v int64) {
	x.xxx_hidden_Option = &allTypes_Sfixed64Option{v}
}

func (x *AllTypes) SetBoolOption(v bool) {
	x.xxx_hidden_Option = &allTypes_BoolOption{v}
}

func (x *AllTypes) SetStringOption(v string) {
	x.xxx_hidden_Option = &allTypes_StringOption{v}
}

func (x *AllTypes) SetBytesOption(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Option = &allTypes_BytesOption{v}
}

func (x *AllTypes) SetMsgOption(v *AllTypes) {
	if v == nil {
		x.xxx_hidden_Option = nil
		return
	}
	x.xxx_hidden_Option = &allTypes_MsgOption{v}
}

func (x *AllTypes) SetEnumOption(v AllTypes_Enum) {
	x.xxx_hidden_Option = &allTypes_EnumOption{v}
}

func (x *AllTypes) HasDoubleValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *AllTypes) HasFloatValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *AllTypes) HasInt32Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *AllTypes) HasInt64Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *AllTypes) HasUint32Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *AllTypes) HasUint64Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 5)
}

func (x *AllTypes) HasSint32Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 6)
}

func (x *AllTypes) HasSint64Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 7)
}

func (x *AllTypes) HasFixed32Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 8)
}

func (x *AllTypes) HasFixed64Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 9)
}

func (x *AllTypes) HasSfixed32Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 10)
}

func (x *AllTypes) HasSfixed64Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 11)
}

func (x *AllTypes) HasBoolValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 12)
}

func (x *AllTypes) HasStringValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 13)
}

func (x *AllTypes) HasBytesValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 14)
}

func (x *AllTypes) HasOptDoubleValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[1]), 57)
}

func (x *AllTypes) HasOptFloatValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[1]), 58)
}

func (x *AllTypes) HasOptInt32Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[1]), 59)
}

func (x *AllTypes) HasOptInt64Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[1]), 60)
}

func (x *AllTypes) HasOptUint32Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[1]), 61)
}

func (x *AllTypes) HasOptUint64Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[1]), 62)
}

func (x *AllTypes) HasOptSint32Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[1]), 63)
}

func (x *AllTypes) HasOptSint64Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[2]), 64)
}

func (x *AllTypes) HasOptFixed32Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[2]), 65)
}

func (x *AllTypes) HasOptFixed64Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[2]), 66)
}

func (x *AllTypes) HasOptSfixed32Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[2]), 67)
}

func (x *AllTypes) HasOptSfixed64Value() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[2]), 68)
}

func (x *AllTypes) HasOptBoolValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[2]), 69)
}

func (x *AllTypes) HasOptStringValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[2]), 70)
}

func (x *AllTypes) HasOptBytesValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[2]), 71)
}

func (x *AllTypes) HasMsgValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_MsgValue != nil
}

func (x *AllTypes) HasEnumValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[2]), 73)
}

func (x *AllTypes) HasOptMsgValue() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_OptMsgValue != nil
}

func (x *AllTypes) HasOptEnumValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[2]), 75)
}

func (x *AllTypes) HasOption() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Option != nil
}

func (x *AllTypes) HasDoubleOption() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Option.(*allTypes_DoubleOption)
	return ok
}

func (x *AllTypes) HasFloatOption() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Option.(*allTypes_FloatOption)
	return ok
}

func (x *AllTypes) HasInt32Option() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Option.(*allTypes_Int32Option)
	return ok
}

func (x *AllTypes) HasInt64Option() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Option.(*allTypes_Int64Option)
	return ok
}

func (x *AllTypes) HasUint32Option() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Option.(*allTypes_Uint32Option)
	return ok
}

func (x *AllTypes) HasUint64Option() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Option.(*allTypes_Uint64Option)
	return ok
}

func (x *AllTypes) HasSint32Option() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Option.(*allTypes_Sint32Option)
	return ok
}

func (x *AllTypes) HasSint64Option() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Option.(*allTypes_Sint64Option)
	return ok
}

func (x *AllTypes) HasFixed32Option() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Option.(*allTypes_Fixed32Option)
	return ok
}

func (x *AllTypes) HasFixed64Option() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Option.(*allTypes_Fixed64Option)
	return ok
}

func (x *AllTypes) HasSfixed32Option() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Option.(*allTypes_Sfixed32Option)
	return ok
}

func (x *AllTypes) HasSfixed64Option() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Option.(*allTypes_Sfixed64Option)
	return ok
}

func (x *AllTypes) HasBoolOption() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Option.(*allTypes_BoolOption)
	return ok
}

func (x *AllTypes) HasStringOption() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Option.(*allTypes_StringOption)
	return ok
}

func (x *AllTypes) HasBytesOption() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Option.(*allTypes_BytesOption)
	return ok
}

func (x *AllTypes) HasMsgOption() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Option.(*allTypes_MsgOption)
	return ok
}

func (x *AllTypes) HasEnumOption() bool {
	if x == nil {
		return false
	}
	_, ok := x.xxx_hidden_Option.(*allTypes_EnumOption)
	return ok
}

func (x *AllTypes) ClearDoubleValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DoubleValue = 0
}

func (x *AllTypes) ClearFloatValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_FloatValue = 0
}

func (x *AllTypes) ClearInt32Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_Int32Value = 0
}

func (x *AllTypes) ClearInt64Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Int64Value = 0
}

func (x *AllTypes) ClearUint32Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Uint32Value = 0
}

func (x *AllTypes) ClearUint64Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 5)
	x.xxx_hidden_Uint64Value = 0
}

func (x *AllTypes) ClearSint32Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 6)
	x.xxx_hidden_Sint32Value = 0
}

func (x *AllTypes) ClearSint64Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 7)
	x.xxx_hidden_Sint64Value = 0
}

func (x *AllTypes) ClearFixed32Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 8)
	x.xxx_hidden_Fixed32Value = 0
}

func (x *AllTypes) ClearFixed64Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 9)
	x.xxx_hidden_Fixed64Value = 0
}

func (x *AllTypes) ClearSfixed32Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 10)
	x.xxx_hidden_Sfixed32Value = 0
}

func (x *AllTypes) ClearSfixed64Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 11)
	x.xxx_hidden_Sfixed64Value = 0
}

func (x *AllTypes) ClearBoolValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 12)
	x.xxx_hidden_BoolValue = false
}

func (x *AllTypes) ClearStringValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 13)
	x.xxx_hidden_StringValue = nil
}

func (x *AllTypes) ClearBytesValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 14)
	x.xxx_hidden_BytesValue = nil
}

func (x *AllTypes) ClearOptDoubleValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[1]), 57)
	x.xxx_hidden_OptDoubleValue = 0
}

func (x *AllTypes) ClearOptFloatValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[1]), 58)
	x.xxx_hidden_OptFloatValue = 0
}

func (x *AllTypes) ClearOptInt32Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[1]), 59)
	x.xxx_hidden_OptInt32Value = 0
}

func (x *AllTypes) ClearOptInt64Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[1]), 60)
	x.xxx_hidden_OptInt64Value = 0
}

func (x *AllTypes) ClearOptUint32Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[1]), 61)
	x.xxx_hidden_OptUint32Value = 0
}

func (x *AllTypes) ClearOptUint64Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[1]), 62)
	x.xxx_hidden_OptUint64Value = 0
}

func (x *AllTypes) ClearOptSint32Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[1]), 63)
	x.xxx_hidden_OptSint32Value = 0
}

func (x *AllTypes) ClearOptSint64Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[2]), 64)
	x.xxx_hidden_OptSint64Value = 0
}

func (x *AllTypes) ClearOptFixed32Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[2]), 65)
	x.xxx_hidden_OptFixed32Value = 0
}

func (x *AllTypes) ClearOptFixed64Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[2]), 66)
	x.xxx_hidden_OptFixed64Value = 0
}

func (x *AllTypes) ClearOptSfixed32Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[2]), 67)
	x.xxx_hidden_OptSfixed32Value = 0
}

func (x *AllTypes) ClearOptSfixed64Value() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[2]), 68)
	x.xxx_hidden_OptSfixed64Value = 0
}

func (x *AllTypes) ClearOptBoolValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[2]), 69)
	x.xxx_hidden_OptBoolValue = false
}

func (x *AllTypes) ClearOptStringValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[2]), 70)
	x.xxx_hidden_OptStringValue = nil
}

func (x *AllTypes) ClearOptBytesValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[2]), 71)
	x.xxx_hidden_OptBytesValue = nil
}

func (x *AllTypes) ClearMsgValue() {
	x.xxx_hidden_MsgValue = nil
}

func (x *AllTypes) ClearEnumValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[2]), 73)
	x.xxx_hidden_EnumValue = AllTypes_ENUM_UNSPECIFIED
}

func (x *AllTypes) ClearOptMsgValue() {
	x.xxx_hidden_OptMsgValue = nil
}

func (x *AllTypes) ClearOptEnumValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[2]), 75)
	x.xxx_hidden_OptEnumValue = AllTypes_ENUM_UNSPECIFIED
}

func (x *AllTypes) ClearOption() {
	x.xxx_hidden_Option = nil
}

func (x *AllTypes) ClearDoubleOption() {
	if _, ok := x.xxx_hidden_Option.(*allTypes_DoubleOption); ok {
		x.xxx_hidden_Option = nil
	}
}

func (x *AllTypes) ClearFloatOption() {
	if _, ok := x.xxx_hidden_Option.(*allTypes_FloatOption); ok {
		x.xxx_hidden_Option = nil
	}
}

func (x *AllTypes) ClearInt32Option() {
	if _, ok := x.xxx_hidden_Option.(*allTypes_Int32Option); ok {
		x.xxx_hidden_Option = nil
	}
}

func (x *AllTypes) ClearInt64Option() {
	if _, ok := x.xxx_hidden_Option.(*allTypes_Int64Option); ok {
		x.xxx_hidden_Option = nil
	}
}

func (x *AllTypes) ClearUint32Option() {
	if _, ok := x.xxx_hidden_Option.(*allTypes_Uint32Option); ok {
		x.xxx_hidden_Option = nil
	}
}

func (x *AllTypes) ClearUint64Option() {
	if _, ok := x.xxx_hidden_Option.(*allTypes_Uint64Option); ok {
		x.xxx_hidden_Option = nil
	}
}

func (x *AllTypes) ClearSint32Option() {
	if _, ok := x.xxx_hidden_Option.(*allTypes_Sint32Option); ok {
		x.xxx_hidden_Option = nil
	}
}

func (x *AllTypes) ClearSint64Option() {
	if _, ok := x.xxx_hidden_Option.(*allTypes_Sint64Option); ok {
		x.xxx_hidden_Option = nil
	}
}

func (x *AllTypes) ClearFixed32Option() {
	if _, ok := x.xxx_hidden_Option.(*allTypes_Fixed32Option); ok {
		x.xxx_hidden_Option = nil
	}
}

func (x *AllTypes) ClearFixed64Option() {
	if _, ok := x.xxx_hidden_Option.(*allTypes_Fixed64Option); ok {
		x.xxx_hidden_Option = nil
	}
}

func (x *AllTypes) ClearSfixed32Option() {
	if _, ok := x.xxx_hidden_Option.(*allTypes_Sfixed32Option); ok {
		x.xxx_hidden_Option = nil
	}
}

func (x *AllTypes) ClearSfixed64Option() {
	if _, ok := x.xxx_hidden_Option.(*allTypes_Sfixed64Option); ok {
		x.xxx_hidden_Option = nil
	}
}

func (x *AllTypes) ClearBoolOption() {
	if _, ok := x.xxx_hidden_Option.(*allTypes_BoolOption); ok {
		x.xxx_hidden_Option = nil
	}
}

func (x *AllTypes) ClearStringOption() {
	if _, ok := x.xxx_hidden_Option.(*allTypes_StringOption); ok {
		x.xxx_hidden_Option = nil
	}
}

func (x *AllTypes) ClearBytesOption() {
	if _, ok := x.xxx_hidden_Option.(*allTypes_BytesOption); ok {
		x.xxx_hidden_Option = nil
	}
}

func (x *AllTypes) ClearMsgOption() {
	if _, ok := x.xxx_hidden_Option.(*allTypes_MsgOption); ok {
		x.xxx_hidden_Option = nil
	}
}

func (x *AllTypes) ClearEnumOption() {
	if _, ok := x.xxx_hidden_Option.(*allTypes_EnumOption); ok {
		x.xxx_hidden_Option = nil
	}
}

const AllTypes_Option_not_set_case case_AllTypes_Option = 0
const AllTypes_DoubleOption_case case_AllTypes_Option = 81
const AllTypes_FloatOption_case case_AllTypes_Option = 82
const AllTypes_Int32Option_case case_AllTypes_Option = 83
const AllTypes_Int64Option_case case_AllTypes_Option = 84
const AllTypes_Uint32Option_case case_AllTypes_Option = 85
const AllTypes_Uint64Option_case case_AllTypes_Option = 86
const AllTypes_Sint32Option_case case_AllTypes_Option = 87
const AllTypes_Sint64Option_case case_AllTypes_Option = 88
const AllTypes_Fixed32Option_case case_AllTypes_Option = 89
const AllTypes_Fixed64Option_case case_AllTypes_Option = 90
const AllTypes_Sfixed32Option_case case_AllTypes_Option = 91
const AllTypes_Sfixed64Option_case case_AllTypes_Option = 92
const AllTypes_BoolOption_case case_AllTypes_Option = 93
const AllTypes_StringOption_case case_AllTypes_Option = 94
const AllTypes_BytesOption_case case_AllTypes_Option = 95
const AllTypes_MsgOption_case case_AllTypes_Option = 96
const AllTypes_EnumOption_case case_AllTypes_Option = 97

func (x *AllTypes) WhichOption() case_AllTypes_Option {
	if x == nil {
		return AllTypes_Option_not_set_case
	}
	switch x.xxx_hidden_Option.(type) {
	case *allTypes_DoubleOption:
		return AllTypes_DoubleOption_case
	case *allTypes_FloatOption:
		return AllTypes_FloatOption_case
	case *allTypes_Int32Option:
		return AllTypes_Int32Option_case
	case *allTypes_Int64Option:
		return AllTypes_Int64Option_case
	case *allTypes_Uint32Option:
		return AllTypes_Uint32Option_case
	case *allTypes_Uint64Option:
		return AllTypes_Uint64Option_case
	case *allTypes_Sint32Option:
		return AllTypes_Sint32Option_case
	case *allTypes_Sint64Option:
		return AllTypes_Sint64Option_case
	case *allTypes_Fixed32Option:
		return AllTypes_Fixed32Option_case
	case *allTypes_Fixed64Option:
		return AllTypes_Fixed64Option_case
	case *allTypes_Sfixed32Option:
		return AllTypes_Sfixed32Option_case
	case *allTypes_Sfixed64Option:
		return AllTypes_Sfixed64Option_case
	case *allTypes_BoolOption:
		return AllTypes_BoolOption_case
	case *allTypes_StringOption:
		return AllTypes_StringOption_case
	case *allTypes_BytesOption:
		return AllTypes_BytesOption_case
	case *allTypes_MsgOption:
		return AllTypes_MsgOption_case
	case *allTypes_EnumOption:
		return AllTypes_EnumOption_case
	default:
		return AllTypes_Option_not_set_case
	}
}

type AllTypes_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// scalar types
	DoubleValue   *float64
	FloatValue    *float32
	Int32Value    *int32
	Int64Value    *int64
	Uint32Value   *uint32
	Uint64Value   *uint64
	Sint32Value   *int32
	Sint64Value   *int64
	Fixed32Value  *uint32
	Fixed64Value  *uint64
	Sfixed32Value *int32
	Sfixed64Value *int64
	BoolValue     *bool
	StringValue   *string
	BytesValue    []byte
	// repeated types
	DoubleList   []float64
	FloatList    []float32
	Int32List    []int32
	Int64List    []int64
	Uint32List   []uint32
	Uint64List   []uint64
	Sint32List   []int32
	Sint64List   []int64
	Fixed32List  []uint32
	Fixed64List  []uint64
	Sfixed32List []int32
	Sfixed64List []int64
	BoolList     []bool
	StringList   []string
	BytesList    [][]byte
	// map key types
	Int32ToStringMap    map[int32]string
	Int64ToStringMap    map[int64]string
	Uint32ToStringMap   map[uint32]string
	Uint64ToStringMap   map[uint64]string
	Sint32ToStringMap   map[int32]string
	Sint64ToStringMap   map[int64]string
	Fixed32ToStringMap  map[uint32]string
	Fixed64ToStringMap  map[uint64]string
	Sfixed32ToStringMap map[int32]string
	Sfixed64ToStringMap map[int64]string
	BoolToStringMap     map[bool]string
	StringToStringMap   map[string]string
	// map value types
	DoubleMap   map[string]float64
	FloatMap    map[string]float32
	Int32Map    map[string]int32
	Int64Map    map[string]int64
	Uint32Map   map[string]uint32
	Uint64Map   map[string]uint64
	Sint32Map   map[string]int32
	Sint64Map   map[string]int64
	Fixed32Map  map[string]uint32
	Fixed64Map  map[string]uint64
	Sfixed32Map map[string]int32
	Sfixed64Map map[string]int64
	BoolMap     map[string]bool
	StringMap   map[string]string
	BytesMap    map[string][]byte
	// explicit presence types
	OptDoubleValue   *float64
	OptFloatValue    *float32
	OptInt32Value    *int32
	OptInt64Value    *int64
	OptUint32Value   *uint32
	OptUint64Value   *uint64
	OptSint32Value   *int32
	OptSint64Value   *int64
	OptFixed32Value  *uint32
	OptFixed64Value  *uint64
	OptSfixed32Value *int32
	OptSfixed64Value *int64
	OptBoolValue     *bool
	OptStringValue   *string
	OptBytesValue    []byte
	MsgValue         *AllTypes
	EnumValue        *AllTypes_Enum
	OptMsgValue      *AllTypes
	OptEnumValue     *AllTypes_Enum
	MsgList          []*AllTypes
	EnumList         []AllTypes_Enum
	MsgMap           map[string]*AllTypes
	EnumMap          map[string]AllTypes_Enum
	// oneof

	// Fields of oneof xxx_hidden_Option:
	DoubleOption   *float64
	FloatOption    *float32
	Int32Option    *int32
	Int64Option    *int64
	Uint32Option   *uint32
	Uint64Option   *uint64
	Sint32Option   *int32
	Sint64Option   *int64
	Fixed32Option  *uint32
	Fixed64Option  *uint64
	Sfixed32Option *int32
	Sfixed64Option *int64
	BoolOption     *bool
	StringOption   *string
	BytesOption    []byte
	MsgOption      *AllTypes
	EnumOption     *AllTypes_Enum
	// -- end of xxx_hidden_Option
}

func (b0 AllTypes_builder) Build() *AllTypes {
	m0 := &AllTypes{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DoubleValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 81)
		x.xxx_hidden_DoubleValue = *b.DoubleValue
	}
	if b.FloatValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 81)
		x.xxx_hidden_FloatValue = *b.FloatValue
	}
	if b.Int32Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 81)
		x.xxx_hidden_Int32Value = *b.Int32Value
	}
	if b.Int64Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 81)
		x.xxx_hidden_Int64Value = *b.Int64Value
	}
	if b.Uint32Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 81)
		x.xxx_hidden_Uint32Value = *b.Uint32Value
	}
	if b.Uint64Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 5, 81)
		x.xxx_hidden_Uint64Value = *b.Uint64Value
	}
	if b.Sint32Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 6, 81)
		x.xxx_hidden_Sint32Value = *b.Sint32Value
	}
	if b.Sint64Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 7, 81)
		x.xxx_hidden_Sint64Value = *b.Sint64Value
	}
	if b.Fixed32Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 8, 81)
		x.xxx_hidden_Fixed32Value = *b.Fixed32Value
	}
	if b.Fixed64Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 9, 81)
		x.xxx_hidden_Fixed64Value = *b.Fixed64Value
	}
	if b.Sfixed32Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 10, 81)
		x.xxx_hidden_Sfixed32Value = *b.Sfixed32Value
	}
	if b.Sfixed64Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 11, 81)
		x.xxx_hidden_Sfixed64Value = *b.Sfixed64Value
	}
	if b.BoolValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 12, 81)
		x.xxx_hidden_BoolValue = *b.BoolValue
	}
	if b.StringValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 13, 81)
		x.xxx_hidden_StringValue = b.StringValue
	}
	if b.BytesValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 14, 81)
		x.xxx_hidden_BytesValue = b.BytesValue
	}
	x.xxx_hidden_DoubleList = b.DoubleList
	x.xxx_hidden_FloatList = b.FloatList
	x.xxx_hidden_Int32List = b.Int32List
	x.xxx_hidden_Int64List = b.Int64List
	x.xxx_hidden_Uint32List = b.Uint32List
	x.xxx_hidden_Uint64List = b.Uint64List
	x.xxx_hidden_Sint32List = b.Sint32List
	x.xxx_hidden_Sint64List = b.Sint64List
	x.xxx_hidden_Fixed32List = b.Fixed32List
	x.xxx_hidden_Fixed64List = b.Fixed64List
	x.xxx_hidden_Sfixed32List = b.Sfixed32List
	x.xxx_hidden_Sfixed64List = b.Sfixed64List
	x.xxx_hidden_BoolList = b.BoolList
	x.xxx_hidden_StringList = b.StringList
	x.xxx_hidden_BytesList = b.BytesList
	x.xxx_hidden_Int32ToStringMap = b.Int32ToStringMap
	x.xxx_hidden_Int64ToStringMap = b.Int64ToStringMap
	x.xxx_hidden_Uint32ToStringMap = b.Uint32ToStringMap
	x.xxx_hidden_Uint64ToStringMap = b.Uint64ToStringMap
	x.xxx_hidden_Sint32ToStringMap = b.Sint32ToStringMap
	x.xxx_hidden_Sint64ToStringMap = b.Sint64ToStringMap
	x.xxx_hidden_Fixed32ToStringMap = b.Fixed32ToStringMap
	x.xxx_hidden_Fixed64ToStringMap = b.Fixed64ToStringMap
	x.xxx_hidden_Sfixed32ToStringMap = b.Sfixed32ToStringMap
	x.xxx_hidden_Sfixed64ToStringMap = b.Sfixed64ToStringMap
	x.xxx_hidden_BoolToStringMap = b.BoolToStringMap
	x.xxx_hidden_StringToStringMap = b.StringToStringMap
	x.xxx_hidden_DoubleMap = b.DoubleMap
	x.xxx_hidden_FloatMap = b.FloatMap
	x.xxx_hidden_Int32Map = b.Int32Map
	x.xxx_hidden_Int64Map = b.Int64Map
	x.xxx_hidden_Uint32Map = b.Uint32Map
	x.xxx_hidden_Uint64Map = b.Uint64Map
	x.xxx_hidden_Sint32Map = b.Sint32Map
	x.xxx_hidden_Sint64Map = b.Sint64Map
	x.xxx_hidden_Fixed32Map = b.Fixed32Map
	x.xxx_hidden_Fixed64Map = b.Fixed64Map
	x.xxx_hidden_Sfixed32Map = b.Sfixed32Map
	x.xxx_hidden_Sfixed64Map = b.Sfixed64Map
	x.xxx_hidden_BoolMap = b.BoolMap
	x.xxx_hidden_StringMap = b.StringMap
	x.xxx_hidden_BytesMap = b.BytesMap
	if b.OptDoubleValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[1]), 57, 81)
		x.xxx_hidden_OptDoubleValue = *b.OptDoubleValue
	}
	if b.OptFloatValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[1]), 58, 81)
		x.xxx_hidden_OptFloatValue = *b.OptFloatValue
	}
	if b.OptInt32Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[1]), 59, 81)
		x.xxx_hidden_OptInt32Value = *b.OptInt32Value
	}
	if b.OptInt64Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[1]), 60, 81)
		x.xxx_hidden_OptInt64Value = *b.OptInt64Value
	}
	if b.OptUint32Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[1]), 61, 81)
		x.xxx_hidden_OptUint32Value = *b.OptUint32Value
	}
	if b.OptUint64Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[1]), 62, 81)
		x.xxx_hidden_OptUint64Value = *b.OptUint64Value
	}
	if b.OptSint32Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[1]), 63, 81)
		x.xxx_hidden_OptSint32Value = *b.OptSint32Value
	}
	if b.OptSint64Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[2]), 64, 81)
		x.xxx_hidden_OptSint64Value = *b.OptSint64Value
	}
	if b.OptFixed32Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[2]), 65, 81)
		x.xxx_hidden_OptFixed32Value = *b.OptFixed32Value
	}
	if b.OptFixed64Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[2]), 66, 81)
		x.xxx_hidden_OptFixed64Value = *b.OptFixed64Value
	}
	if b.OptSfixed32Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[2]), 67, 81)
		x.xxx_hidden_OptSfixed32Value = *b.OptSfixed32Value
	}
	if b.OptSfixed64Value != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[2]), 68, 81)
		x.xxx_hidden_OptSfixed64Value = *b.OptSfixed64Value
	}
	if b.OptBoolValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[2]), 69, 81)
		x.xxx_hidden_OptBoolValue = *b.OptBoolValue
	}
	if b.OptStringValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[2]), 70, 81)
		x.xxx_hidden_OptStringValue = b.OptStringValue
	}
	if b.OptBytesValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[2]), 71, 81)
		x.xxx_hidden_OptBytesValue = b.OptBytesValue
	}
	x.xxx_hidden_MsgValue = b.MsgValue
	if b.EnumValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[2]), 73, 81)
		x.xxx_hidden_EnumValue = *b.EnumValue
	}
	x.xxx_hidden_OptMsgValue = b.OptMsgValue
	if b.OptEnumValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[2]), 75, 81)
		x.xxx_hidden_OptEnumValue = *b.OptEnumValue
	}
	x.xxx_hidden_MsgList = &b.MsgList
	x.xxx_hidden_EnumList = b.EnumList
	x.xxx_hidden_MsgMap = b.MsgMap
	x.xxx_hidden_EnumMap = b.EnumMap
	if b.DoubleOption != nil {
		x.xxx_hidden_Option = &allTypes_DoubleOption{*b.DoubleOption}
	}
	if b.FloatOption != nil {
		x.xxx_hidden_Option = &allTypes_FloatOption{*b.FloatOption}
	}
	if b.Int32Option != nil {
		x.xxx_hidden_Option = &allTypes_Int32Option{*b.Int32Option}
	}
	if b.Int64Option != nil {
		x.xxx_hidden_Option = &allTypes_Int64Option{*b.Int64Option}
	}
	if b.Uint32Option != nil {
		x.xxx_hidden_Option = &allTypes_Uint32Option{*b.Uint32Option}
	}
	if b.Uint64Option != nil {
		x.xxx_hidden_Option = &allTypes_Uint64Option{*b.Uint64Option}
	}
	if b.Sint32Option != nil {
		x.xxx_hidden_Option = &allTypes_Sint32Option{*b.Sint32Option}
	}
	if b.Sint64Option != nil {
		x.xxx_hidden_Option = &allTypes_Sint64Option{*b.Sint64Option}
	}
	if b.Fixed32Option != nil {
		x.xxx_hidden_Option = &allTypes_Fixed32Option{*b.Fixed32Option}
	}
	if b.Fixed64Option != nil {
		x.xxx_hidden_Option = &allTypes_Fixed64Option{*b.Fixed64Option}
	}
	if b.Sfixed32Option != nil {
		x.xxx_hidden_Option = &allTypes_Sfixed32Option{*b.Sfixed32Option}
	}
	if b.Sfixed64Option != nil {
		x.xxx_hidden_Option = &allTypes_Sfixed64Option{*b.Sfixed64Option}
	}
	if b.BoolOption != nil {
		x.xxx_hidden_Option = &allTypes_BoolOption{*b.BoolOption}
	}
	if b.StringOption != nil {
		x.xxx_hidden_Option = &allTypes_StringOption{*b.StringOption}
	}
	if b.BytesOption != nil {
		x.xxx_hidden_Option = &allTypes_BytesOption{b.BytesOption}
	}
	if b.MsgOption != nil {
		x.xxx_hidden_Option = &allTypes_MsgOption{b.MsgOption}
	}
	if b.EnumOption != nil {
		x.xxx_hidden_Option = &allTypes_EnumOption{*b.EnumOption}
	}
	return m0
}

type case_AllTypes_Option protoreflect.FieldNumber

func (x case_AllTypes_Option) String() string {
	md := file_test_v1_test_proto_msgTypes[1].Descriptor()
	if x == 0 {
		return "not set"
	}
	return protoimpl.X.MessageFieldStringOf(md, protoreflect.FieldNumber(x))
}

type isAllTypes_Option interface {
	isAllTypes_Option()
}

type allTypes_DoubleOption struct {
	DoubleOption float64 `protobuf:"fixed64,81,opt,name=double_option,json=doubleOption,oneof"`
}

type allTypes_FloatOption struct {
	FloatOption float32 `protobuf:"fixed32,82,opt,name=float_option,json=floatOption,oneof"`
}

type allTypes_Int32Option struct {
	Int32Option int32 `protobuf:"varint,83,opt,name=int32_option,json=int32Option,oneof"`
}

type allTypes_Int64Option struct {
	Int64Option int64 `protobuf:"varint,84,opt,name=int64_option,json=int64Option,oneof"`
}

type allTypes_Uint32Option struct {
	Uint32Option uint32 `protobuf:"varint,85,opt,name=uint32_option,json=uint32Option,oneof"`
}

type allTypes_Uint64Option struct {
	Uint64Option uint64 `protobuf:"varint,86,opt,name=uint64_option,json=uint64Option,oneof"`
}

type allTypes_Sint32Option struct {
	Sint32Option int32 `protobuf:"zigzag32,87,opt,name=sint32_option,json=sint32Option,oneof"`
}

type allTypes_Sint64Option struct {
	Sint64Option int64 `protobuf:"zigzag64,88,opt,name=sint64_option,json=sint64Option,oneof"`
}

type allTypes_Fixed32Option struct {
	Fixed32Option uint32 `protobuf:"fixed32,89,opt,name=fixed32_option,json=fixed32Option,oneof"`
}

type allTypes_Fixed64Option struct {
	Fixed64Option uint64 `protobuf:"fixed64,90,opt,name=fixed64_option,json=fixed64Option,oneof"`
}

type allTypes_Sfixed32Option struct {
	Sfixed32Option int32 `protobuf:"fixed32,91,opt,name=sfixed32_option,json=sfixed32Option,oneof"`
}

type allTypes_Sfixed64Option struct {
	Sfixed64Option int64 `protobuf:"fixed64,92,opt,name=sfixed64_option,json=sfixed64Option,oneof"`
}

type allTypes_BoolOption struct {
	BoolOption bool `protobuf:"varint,93,opt,name=bool_option,json=boolOption,oneof"`
}

type allTypes_StringOption struct {
	StringOption string `protobuf:"bytes,94,opt,name=string_option,json=stringOption,oneof"`
}

type allTypes_BytesOption struct {
	BytesOption []byte `protobuf:"bytes,95,opt,name=bytes_option,json=bytesOption,oneof"`
}

type allTypes_MsgOption struct {
	MsgOption *AllTypes `protobuf:"bytes,96,opt,name=msg_option,json=msgOption,oneof"`
}

type allTypes_EnumOption struct {
	EnumOption AllTypes_Enum `protobuf:"varint,97,opt,name=enum_option,json=enumOption,enum=test.v1.AllTypes_Enum,oneof"`
}

func (*allTypes_DoubleOption) isAllTypes_Option() {}

func (*allTypes_FloatOption) isAllTypes_Option() {}

func (*allTypes_Int32Option) isAllTypes_Option() {}

func (*allTypes_Int64Option) isAllTypes_Option() {}

func (*allTypes_Uint32Option) isAllTypes_Option() {}

func (*allTypes_Uint64Option) isAllTypes_Option() {}

func (*allTypes_Sint32Option) isAllTypes_Option() {}

func (*allTypes_Sint64Option) isAllTypes_Option() {}

func (*allTypes_Fixed32Option) isAllTypes_Option() {}

func (*allTypes_Fixed64Option) isAllTypes_Option() {}

func (*allTypes_Sfixed32Option) isAllTypes_Option() {}

func (*allTypes_Sfixed64Option) isAllTypes_Option() {}

func (*allTypes_BoolOption) isAllTypes_Option() {}

func (*allTypes_StringOption) isAllTypes_Option() {}

func (*allTypes_BytesOption) isAllTypes_Option() {}

func (*allTypes_MsgOption) isAllTypes_Option() {}

func (*allTypes_EnumOption) isAllTypes_Option() {}

type EnumTest struct {
	state                     protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_EnumIn         EnumTest_TestEnum      `protobuf:"varint,1,opt,name=enum_in,json=enumIn,enum=test.v1.EnumTest_TestEnum"`
	xxx_hidden_EnumNotIn      EnumTest_TestEnum      `protobuf:"varint,2,opt,name=enum_not_in,json=enumNotIn,enum=test.v1.EnumTest_TestEnum"`
	xxx_hidden_EnumInAndNotIn EnumTest_TestEnum      `protobuf:"varint,3,opt,name=enum_in_and_not_in,json=enumInAndNotIn,enum=test.v1.EnumTest_TestEnum"`
	xxx_hidden_EnumConst      EnumTest_TestEnum      `protobuf:"varint,4,opt,name=enum_const,json=enumConst,enum=test.v1.EnumTest_TestEnum"`
	xxx_hidden_EnumRequired   EnumTest_TestEnum      `protobuf:"varint,5,opt,name=enum_required,json=enumRequired,enum=test.v1.EnumTest_TestEnum"`
	XXX_raceDetectHookData    protoimpl.RaceDetectHookData
	XXX_presence              [1]uint32
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *EnumTest) Reset() {
	*x = EnumTest{}
	mi := &file_test_v1_test_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnumTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumTest) ProtoMessage() {}

func (x *EnumTest) ProtoReflect() protoreflect.Message {
	mi := &file_test_v1_test_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *EnumTest) GetEnumIn() EnumTest_TestEnum {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 0) {
			return x.xxx_hidden_EnumIn
		}
	}
	return EnumTest_TEST_ENUM_UNSPECIFIED
}

func (x *EnumTest) GetEnumNotIn() EnumTest_TestEnum {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_EnumNotIn
		}
	}
	return EnumTest_TEST_ENUM_UNSPECIFIED
}

func (x *EnumTest) GetEnumInAndNotIn() EnumTest_TestEnum {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_EnumInAndNotIn
		}
	}
	return EnumTest_TEST_ENUM_UNSPECIFIED
}

func (x *EnumTest) GetEnumConst() EnumTest_TestEnum {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 3) {
			return x.xxx_hidden_EnumConst
		}
	}
	return EnumTest_TEST_ENUM_UNSPECIFIED
}

func (x *EnumTest) GetEnumRequired() EnumTest_TestEnum {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 4) {
			return x.xxx_hidden_EnumRequired
		}
	}
	return EnumTest_TEST_ENUM_UNSPECIFIED
}

func (x *EnumTest) SetEnumIn(v EnumTest_TestEnum) {
	x.xxx_hidden_EnumIn = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 5)
}

func (x *EnumTest) SetEnumNotIn(v EnumTest_TestEnum) {
	x.xxx_hidden_EnumNotIn = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 5)
}

func (x *EnumTest) SetEnumInAndNotIn(v EnumTest_TestEnum) {
	x.xxx_hidden_EnumInAndNotIn = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 5)
}

func (x *EnumTest) SetEnumConst(v EnumTest_TestEnum) {
	x.xxx_hidden_EnumConst = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *EnumTest) SetEnumRequired(v EnumTest_TestEnum) {
	x.xxx_hidden_EnumRequired = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *EnumTest) HasEnumIn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *EnumTest) HasEnumNotIn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *EnumTest) HasEnumInAndNotIn() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *EnumTest) HasEnumConst() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *EnumTest) HasEnumRequired() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *EnumTest) ClearEnumIn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_EnumIn = EnumTest_TEST_ENUM_UNSPECIFIED
}

func (x *EnumTest) ClearEnumNotIn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_EnumNotIn = EnumTest_TEST_ENUM_UNSPECIFIED
}

func (x *EnumTest) ClearEnumInAndNotIn() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_EnumInAndNotIn = EnumTest_TEST_ENUM_UNSPECIFIED
}

func (x *EnumTest) ClearEnumConst() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_EnumConst = EnumTest_TEST_ENUM_UNSPECIFIED
}

func (x *EnumTest) ClearEnumRequired() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_EnumRequired = EnumTest_TEST_ENUM_UNSPECIFIED
}

type EnumTest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	EnumIn         *EnumTest_TestEnum
	EnumNotIn      *EnumTest_TestEnum
	EnumInAndNotIn *EnumTest_TestEnum
	EnumConst      *EnumTest_TestEnum
	EnumRequired   *EnumTest_TestEnum
}

func (b0 EnumTest_builder) Build() *EnumTest {
	m0 := &EnumTest{}
	b, x := &b0, m0
	_, _ = b, x
	if b.EnumIn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 5)
		x.xxx_hidden_EnumIn = *b.EnumIn
	}
	if b.EnumNotIn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 5)
		x.xxx_hidden_EnumNotIn = *b.EnumNotIn
	}
	if b.EnumInAndNotIn != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 5)
		x.xxx_hidden_EnumInAndNotIn = *b.EnumInAndNotIn
	}
	if b.EnumConst != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_EnumConst = *b.EnumConst
	}
	if b.EnumRequired != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_EnumRequired = *b.EnumRequired
	}
	return m0
}

type RepeatedEnumTest struct {
	state                     protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_RepeatedEnumIn []RepeatedEnumTest_TestEnum `protobuf:"varint,1,rep,packed,name=repeated_enum_in,json=repeatedEnumIn,enum=test.v1.RepeatedEnumTest_TestEnum"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *RepeatedEnumTest) Reset() {
	*x = RepeatedEnumTest{}
	mi := &file_test_v1_test_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepeatedEnumTest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedEnumTest) ProtoMessage() {}

func (x *RepeatedEnumTest) ProtoReflect() protoreflect.Message {
	mi := &file_test_v1_test_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *RepeatedEnumTest) GetRepeatedEnumIn() []RepeatedEnumTest_TestEnum {
	if x != nil {
		return x.xxx_hidden_RepeatedEnumIn
	}
	return nil
}

func (x *RepeatedEnumTest) SetRepeatedEnumIn(v []RepeatedEnumTest_TestEnum) {
	x.xxx_hidden_RepeatedEnumIn = v
}

type RepeatedEnumTest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	RepeatedEnumIn []RepeatedEnumTest_TestEnum
}

func (b0 RepeatedEnumTest_builder) Build() *RepeatedEnumTest {
	m0 := &RepeatedEnumTest{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_RepeatedEnumIn = b.RepeatedEnumIn
	return m0
}

type ParameterValues_Nested struct {
	state                         protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_DoubleValue        float64                     `protobuf:"fixed64,1,opt,name=double_value,json=doubleValue"`
	xxx_hidden_DoubleValueWrapper *wrapperspb.DoubleValue     `protobuf:"bytes,2,opt,name=double_value_wrapper,json=doubleValueWrapper"`
	xxx_hidden_EnumValue          ParameterValues_Nested_Enum `protobuf:"varint,3,opt,name=enum_value,json=enumValue,enum=test.v1.ParameterValues_Nested_Enum"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *ParameterValues_Nested) Reset() {
	*x = ParameterValues_Nested{}
	mi := &file_test_v1_test_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParameterValues_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParameterValues_Nested) ProtoMessage() {}

func (x *ParameterValues_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_test_v1_test_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *ParameterValues_Nested) GetDoubleValue() float64 {
	if x != nil {
		return x.xxx_hidden_DoubleValue
	}
	return 0
}

func (x *ParameterValues_Nested) GetDoubleValueWrapper() *wrapperspb.DoubleValue {
	if x != nil {
		return x.xxx_hidden_DoubleValueWrapper
	}
	return nil
}

func (x *ParameterValues_Nested) GetEnumValue() ParameterValues_Nested_Enum {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 2) {
			return x.xxx_hidden_EnumValue
		}
	}
	return ParameterValues_Nested_ENUM_UNSPECIFIED
}

func (x *ParameterValues_Nested) SetDoubleValue(v float64) {
	x.xxx_hidden_DoubleValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 3)
}

func (x *ParameterValues_Nested) SetDoubleValueWrapper(v *wrapperspb.DoubleValue) {
	x.xxx_hidden_DoubleValueWrapper = v
}

func (x *ParameterValues_Nested) SetEnumValue(v ParameterValues_Nested_Enum) {
	x.xxx_hidden_EnumValue = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 2, 3)
}

func (x *ParameterValues_Nested) HasDoubleValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *ParameterValues_Nested) HasDoubleValueWrapper() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_DoubleValueWrapper != nil
}

func (x *ParameterValues_Nested) HasEnumValue() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 2)
}

func (x *ParameterValues_Nested) ClearDoubleValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_DoubleValue = 0
}

func (x *ParameterValues_Nested) ClearDoubleValueWrapper() {
	x.xxx_hidden_DoubleValueWrapper = nil
}

func (x *ParameterValues_Nested) ClearEnumValue() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 2)
	x.xxx_hidden_EnumValue = ParameterValues_Nested_ENUM_UNSPECIFIED
}

type ParameterValues_Nested_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	DoubleValue        *float64
	DoubleValueWrapper *wrapperspb.DoubleValue
	EnumValue          *ParameterValues_Nested_Enum
}

func (b0 ParameterValues_Nested_builder) Build() *ParameterValues_Nested {
	m0 := &ParameterValues_Nested{}
	b, x := &b0, m0
	_, _ = b, x
	if b.DoubleValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 3)
		x.xxx_hidden_DoubleValue = *b.DoubleValue
	}
	x.xxx_hidden_DoubleValueWrapper = b.DoubleValueWrapper
	if b.EnumValue != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 2, 3)
		x.xxx_hidden_EnumValue = *b.EnumValue
	}
	return m0
}

var File_test_v1_test_proto protoreflect.FileDescriptor

const file_test_v1_test_proto_rawDesc = "" +
	"\n" +
	"\x12test/v1/test.proto\x12\atest.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1egoogle/protobuf/duration.proto\x1a google/protobuf/field_mask.proto\x1a!google/protobuf/go_features.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\x8c\x18\n" +
	"\x0fParameterValues\x12!\n" +
	"\fdouble_value\x18\x01 \x01(\x01R\vdoubleValue\x12\x1f\n" +
	"\vfloat_value\x18\x02 \x01(\x02R\n" +
	"floatValue\x12\x1f\n" +
	"\vint32_value\x18\x03 \x01(\x05R\n" +
	"int32Value\x12\x1f\n" +
	"\vint64_value\x18\x04 \x01(\x03R\n" +
	"int64Value\x12!\n" +
	"\fuint32_value\x18\x05 \x01(\rR\vuint32Value\x12!\n" +
	"\fuint64_value\x18\x06 \x01(\x04R\vuint64Value\x12!\n" +
	"\fsint32_value\x18\a \x01(\x11R\vsint32Value\x12!\n" +
	"\fsint64_value\x18\b \x01(\x12R\vsint64Value\x12#\n" +
	"\rfixed32_value\x18\t \x01(\aR\ffixed32Value\x12#\n" +
	"\rfixed64_value\x18\n" +
	" \x01(\x06R\ffixed64Value\x12%\n" +
	"\x0esfixed32_value\x18\v \x01(\x0fR\rsfixed32Value\x12%\n" +
	"\x0esfixed64_value\x18\f \x01(\x10R\rsfixed64Value\x12\x1d\n" +
	"\n" +
	"bool_value\x18\r \x01(\bR\tboolValue\x12!\n" +
	"\fstring_value\x18\x0e \x01(\tR\vstringValue\x12\x1f\n" +
	"\vbytes_value\x18\x0f \x01(\fR\n" +
	"bytesValue\x128\n" +
	"\ttimestamp\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x125\n" +
	"\bduration\x18\x11 \x01(\v2\x19.google.protobuf.DurationR\bduration\x12H\n" +
	"\x12bool_value_wrapper\x18\x12 \x01(\v2\x1a.google.protobuf.BoolValueR\x10boolValueWrapper\x12K\n" +
	"\x13int32_value_wrapper\x18\x13 \x01(\v2\x1b.google.protobuf.Int32ValueR\x11int32ValueWrapper\x12K\n" +
	"\x13int64_value_wrapper\x18\x14 \x01(\v2\x1b.google.protobuf.Int64ValueR\x11int64ValueWrapper\x12N\n" +
	"\x14uint32_value_wrapper\x18\x15 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x12uint32ValueWrapper\x12N\n" +
	"\x14uint64_value_wrapper\x18\x16 \x01(\v2\x1c.google.protobuf.UInt64ValueR\x12uint64ValueWrapper\x12K\n" +
	"\x13float_value_wrapper\x18\x17 \x01(\v2\x1b.google.protobuf.FloatValueR\x11floatValueWrapper\x12N\n" +
	"\x14double_value_wrapper\x18\x18 \x01(\v2\x1c.google.protobuf.DoubleValueR\x12doubleValueWrapper\x12K\n" +
	"\x13bytes_value_wrapper\x18\x19 \x01(\v2\x1b.google.protobuf.BytesValueR\x11bytesValueWrapper\x12N\n" +
	"\x14string_value_wrapper\x18\x1a \x01(\v2\x1c.google.protobuf.StringValueR\x12stringValueWrapper\x129\n" +
	"\n" +
	"field_mask\x18\x1b \x01(\v2\x1a.google.protobuf.FieldMaskR\tfieldMask\x12<\n" +
	"\n" +
	"enum_value\x18\x1c \x01(\x0e2\x1d.test.v1.ParameterValues.EnumR\tenumValue\x12:\n" +
	"\tenum_list\x18\x1d \x03(\x0e2\x1d.test.v1.ParameterValues.EnumR\benumList\x12\x1f\n" +
	"\vdouble_list\x18\x1e \x03(\x01R\n" +
	"doubleList\x12H\n" +
	"\x11double_value_list\x18\x1f \x03(\v2\x1c.google.protobuf.DoubleValueR\x0fdoubleValueList\x12.\n" +
	"\x12oneof_double_value\x18! \x01(\x01H\x00R\x10oneofDoubleValue\x12[\n" +
	"\x1aoneof_double_value_wrapper\x18\" \x01(\v2\x1c.google.protobuf.DoubleValueH\x00R\x17oneofDoubleValueWrapper\x12I\n" +
	"\x10oneof_enum_value\x18# \x01(\x0e2\x1d.test.v1.ParameterValues.EnumH\x00R\x0eoneofEnumValue\x127\n" +
	"\x06nested\x18$ \x01(\v2\x1f.test.v1.ParameterValues.NestedR\x06nested\x126\n" +
	"\trecursive\x18% \x01(\v2\x18.test.v1.ParameterValuesR\trecursive\x12F\n" +
	"\n" +
	"string_map\x18& \x03(\v2'.test.v1.ParameterValues.StringMapEntryR\tstringMap\x12V\n" +
	"\x10string_value_map\x18' \x03(\v2,.test.v1.ParameterValues.StringValueMapEntryR\x0estringValueMap\x12@\n" +
	"\benum_map\x18( \x03(\v2%.test.v1.ParameterValues.EnumMapEntryR\aenumMap\x12F\n" +
	"\n" +
	"nested_map\x18) \x03(\v2'.test.v1.ParameterValues.NestedMapEntryR\tnestedMap\x12:\n" +
	"\fstruct_value\x18* \x01(\v2\x17.google.protobuf.StructR\vstructValue\x12,\n" +
	"\x05value\x18+ \x01(\v2\x16.google.protobuf.ValueR\x05value\x12?\n" +
	"\x0erecursive_list\x18, \x03(\v2\x18.test.v1.ParameterValuesR\rrecursiveList\x1a\xee\x01\n" +
	"\x06Nested\x12!\n" +
	"\fdouble_value\x18\x01 \x01(\x01R\vdoubleValue\x12N\n" +
	"\x14double_value_wrapper\x18\x02 \x01(\v2\x1c.google.protobuf.DoubleValueR\x12doubleValueWrapper\x12C\n" +
	"\n" +
	"enum_value\x18\x03 \x01(\x0e2$.test.v1.ParameterValues.Nested.EnumR\tenumValue\",\n" +
	"\x04Enum\x12\x14\n" +
	"\x10ENUM_UNSPECIFIED\x10\x00\x12\x0e\n" +
	"\n" +
	"ENUM_VALUE\x10\x01\x1a<\n" +
	"\x0eStringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a_\n" +
	"\x13StringValueMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueR\x05value:\x028\x01\x1aY\n" +
	"\fEnumMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\x0e2\x1d.test.v1.ParameterValues.EnumR\x05value:\x028\x01\x1a]\n" +
	"\x0eNestedMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x125\n" +
	"\x05value\x18\x02 \x01(\v2\x1f.test.v1.ParameterValues.NestedR\x05value:\x028\x01\",\n" +
	"\x04Enum\x12\x14\n" +
	"\x10ENUM_UNSPECIFIED\x10\x00\x12\x0e\n" +
	"\n" +
	"ENUM_VALUE\x10\x01B\a\n" +
	"\x05oneof\"\xd46\n" +
	"\bAllTypes\x12!\n" +
	"\fdouble_value\x18\x01 \x01(\x01R\vdoubleValue\x12\x1f\n" +
	"\vfloat_value\x18\x02 \x01(\x02R\n" +
	"floatValue\x12\x1f\n" +
	"\vint32_value\x18\x03 \x01(\x05R\n" +
	"int32Value\x12\x1f\n" +
	"\vint64_value\x18\x04 \x01(\x03R\n" +
	"int64Value\x12!\n" +
	"\fuint32_value\x18\x05 \x01(\rR\vuint32Value\x12!\n" +
	"\fuint64_value\x18\x06 \x01(\x04R\vuint64Value\x12!\n" +
	"\fsint32_value\x18\a \x01(\x11R\vsint32Value\x12!\n" +
	"\fsint64_value\x18\b \x01(\x12R\vsint64Value\x12#\n" +
	"\rfixed32_value\x18\t \x01(\aR\ffixed32Value\x12#\n" +
	"\rfixed64_value\x18\n" +
	" \x01(\x06R\ffixed64Value\x12%\n" +
	"\x0esfixed32_value\x18\v \x01(\x0fR\rsfixed32Value\x12%\n" +
	"\x0esfixed64_value\x18\f \x01(\x10R\rsfixed64Value\x12\x1d\n" +
	"\n" +
	"bool_value\x18\r \x01(\bR\tboolValue\x12!\n" +
	"\fstring_value\x18\x0e \x01(\tR\vstringValue\x12\x1f\n" +
	"\vbytes_value\x18\x0f \x01(\fR\n" +
	"bytesValue\x12\x1f\n" +
	"\vdouble_list\x18\x10 \x03(\x01R\n" +
	"doubleList\x12\x1d\n" +
	"\n" +
	"float_list\x18\x11 \x03(\x02R\tfloatList\x12\x1d\n" +
	"\n" +
	"int32_list\x18\x12 \x03(\x05R\tint32List\x12\x1d\n" +
	"\n" +
	"int64_list\x18\x13 \x03(\x03R\tint64List\x12\x1f\n" +
	"\vuint32_list\x18\x14 \x03(\rR\n" +
	"uint32List\x12\x1f\n" +
	"\vuint64_list\x18\x15 \x03(\x04R\n" +
	"uint64List\x12\x1f\n" +
	"\vsint32_list\x18\x16 \x03(\x11R\n" +
	"sint32List\x12\x1f\n" +
	"\vsint64_list\x18\x17 \x03(\x12R\n" +
	"sint64List\x12!\n" +
	"\ffixed32_list\x18\x18 \x03(\aR\vfixed32List\x12!\n" +
	"\ffixed64_list\x18\x19 \x03(\x06R\vfixed64List\x12#\n" +
	"\rsfixed32_list\x18\x1a \x03(\x0fR\fsfixed32List\x12#\n" +
	"\rsfixed64_list\x18\x1b \x03(\x10R\fsfixed64List\x12\x1b\n" +
	"\tbool_list\x18\x1c \x03(\bR\bboolList\x12\x1f\n" +
	"\vstring_list\x18\x1d \x03(\tR\n" +
	"stringList\x12\x1d\n" +
	"\n" +
	"bytes_list\x18\x1e \x03(\fR\tbytesList\x12V\n" +
	"\x13int32_to_string_map\x18\x1f \x03(\v2'.test.v1.AllTypes.Int32ToStringMapEntryR\x10int32ToStringMap\x12V\n" +
	"\x13int64_to_string_map\x18  \x03(\v2'.test.v1.AllTypes.Int64ToStringMapEntryR\x10int64ToStringMap\x12Y\n" +
	"\x14uint32_to_string_map\x18! \x03(\v2(.test.v1.AllTypes.Uint32ToStringMapEntryR\x11uint32ToStringMap\x12Y\n" +
	"\x14uint64_to_string_map\x18\" \x03(\v2(.test.v1.AllTypes.Uint64ToStringMapEntryR\x11uint64ToStringMap\x12Y\n" +
	"\x14sint32_to_string_map\x18# \x03(\v2(.test.v1.AllTypes.Sint32ToStringMapEntryR\x11sint32ToStringMap\x12Y\n" +
	"\x14sint64_to_string_map\x18$ \x03(\v2(.test.v1.AllTypes.Sint64ToStringMapEntryR\x11sint64ToStringMap\x12\\\n" +
	"\x15fixed32_to_string_map\x18% \x03(\v2).test.v1.AllTypes.Fixed32ToStringMapEntryR\x12fixed32ToStringMap\x12\\\n" +
	"\x15fixed64_to_string_map\x18& \x03(\v2).test.v1.AllTypes.Fixed64ToStringMapEntryR\x12fixed64ToStringMap\x12_\n" +
	"\x16sfixed32_to_string_map\x18' \x03(\v2*.test.v1.AllTypes.Sfixed32ToStringMapEntryR\x13sfixed32ToStringMap\x12_\n" +
	"\x16sfixed64_to_string_map\x18( \x03(\v2*.test.v1.AllTypes.Sfixed64ToStringMapEntryR\x13sfixed64ToStringMap\x12S\n" +
	"\x12bool_to_string_map\x18) \x03(\v2&.test.v1.AllTypes.BoolToStringMapEntryR\x0fboolToStringMap\x12Y\n" +
	"\x14string_to_string_map\x18* \x03(\v2(.test.v1.AllTypes.StringToStringMapEntryR\x11stringToStringMap\x12?\n" +
	"\n" +
	"double_map\x18+ \x03(\v2 .test.v1.AllTypes.DoubleMapEntryR\tdoubleMap\x12<\n" +
	"\tfloat_map\x18, \x03(\v2\x1f.test.v1.AllTypes.FloatMapEntryR\bfloatMap\x12<\n" +
	"\tint32_map\x18- \x03(\v2\x1f.test.v1.AllTypes.Int32MapEntryR\bint32Map\x12<\n" +
	"\tint64_map\x18. \x03(\v2\x1f.test.v1.AllTypes.Int64MapEntryR\bint64Map\x12?\n" +
	"\n" +
	"uint32_map\x18/ \x03(\v2 .test.v1.AllTypes.Uint32MapEntryR\tuint32Map\x12?\n" +
	"\n" +
	"uint64_map\x180 \x03(\v2 .test.v1.AllTypes.Uint64MapEntryR\tuint64Map\x12?\n" +
	"\n" +
	"sint32_map\x181 \x03(\v2 .test.v1.AllTypes.Sint32MapEntryR\tsint32Map\x12?\n" +
	"\n" +
	"sint64_map\x182 \x03(\v2 .test.v1.AllTypes.Sint64MapEntryR\tsint64Map\x12B\n" +
	"\vfixed32_map\x183 \x03(\v2!.test.v1.AllTypes.Fixed32MapEntryR\n" +
	"fixed32Map\x12B\n" +
	"\vfixed64_map\x184 \x03(\v2!.test.v1.AllTypes.Fixed64MapEntryR\n" +
	"fixed64Map\x12E\n" +
	"\fsfixed32_map\x185 \x03(\v2\".test.v1.AllTypes.Sfixed32MapEntryR\vsfixed32Map\x12E\n" +
	"\fsfixed64_map\x186 \x03(\v2\".test.v1.AllTypes.Sfixed64MapEntryR\vsfixed64Map\x129\n" +
	"\bbool_map\x187 \x03(\v2\x1e.test.v1.AllTypes.BoolMapEntryR\aboolMap\x12?\n" +
	"\n" +
	"string_map\x188 \x03(\v2 .test.v1.AllTypes.StringMapEntryR\tstringMap\x12<\n" +
	"\tbytes_map\x189 \x03(\v2\x1f.test.v1.AllTypes.BytesMapEntryR\bbytesMap\x12/\n" +
	"\x10opt_double_value\x18: \x01(\x01B\x05\xaa\x01\x02\b\x01R\x0eoptDoubleValue\x12-\n" +
	"\x0fopt_float_value\x18; \x01(\x02B\x05\xaa\x01\x02\b\x01R\roptFloatValue\x12-\n" +
	"\x0fopt_int32_value\x18< \x01(\x05B\x05\xaa\x01\x02\b\x01R\roptInt32Value\x12-\n" +
	"\x0fopt_int64_value\x18= \x01(\x03B\x05\xaa\x01\x02\b\x01R\roptInt64Value\x12/\n" +
	"\x10opt_uint32_value\x18> \x01(\rB\x05\xaa\x01\x02\b\x01R\x0eoptUint32Value\x12/\n" +
	"\x10opt_uint64_value\x18? \x01(\x04B\x05\xaa\x01\x02\b\x01R\x0eoptUint64Value\x12/\n" +
	"\x10opt_sint32_value\x18@ \x01(\x11B\x05\xaa\x01\x02\b\x01R\x0eoptSint32Value\x12/\n" +
	"\x10opt_sint64_value\x18A \x01(\x12B\x05\xaa\x01\x02\b\x01R\x0eoptSint64Value\x121\n" +
	"\x11opt_fixed32_value\x18B \x01(\aB\x05\xaa\x01\x02\b\x01R\x0foptFixed32Value\x121\n" +
	"\x11opt_fixed64_value\x18C \x01(\x06B\x05\xaa\x01\x02\b\x01R\x0foptFixed64Value\x123\n" +
	"\x12opt_sfixed32_value\x18D \x01(\x0fB\x05\xaa\x01\x02\b\x01R\x10optSfixed32Value\x123\n" +
	"\x12opt_sfixed64_value\x18E \x01(\x10B\x05\xaa\x01\x02\b\x01R\x10optSfixed64Value\x12+\n" +
	"\x0eopt_bool_value\x18F \x01(\bB\x05\xaa\x01\x02\b\x01R\foptBoolValue\x12/\n" +
	"\x10opt_string_value\x18G \x01(\tB\x05\xaa\x01\x02\b\x01R\x0eoptStringValue\x12-\n" +
	"\x0fopt_bytes_value\x18H \x01(\fB\x05\xaa\x01\x02\b\x01R\roptBytesValue\x12.\n" +
	"\tmsg_value\x18I \x01(\v2\x11.test.v1.AllTypesR\bmsgValue\x12A\n" +
	"\n" +
	"enum_value\x18J \x01(\x0e2\x16.test.v1.AllTypes.EnumB\n" +
	"\xbaH\a\x82\x01\x04 \x01 \x02R\tenumValue\x12<\n" +
	"\ropt_msg_value\x18K \x01(\v2\x11.test.v1.AllTypesB\x05\xaa\x01\x02\b\x01R\voptMsgValue\x12C\n" +
	"\x0eopt_enum_value\x18L \x01(\x0e2\x16.test.v1.AllTypes.EnumB\x05\xaa\x01\x02\b\x01R\foptEnumValue\x12,\n" +
	"\bmsg_list\x18M \x03(\v2\x11.test.v1.AllTypesR\amsgList\x123\n" +
	"\tenum_list\x18N \x03(\x0e2\x16.test.v1.AllTypes.EnumR\benumList\x126\n" +
	"\amsg_map\x18O \x03(\v2\x1d.test.v1.AllTypes.MsgMapEntryR\x06msgMap\x129\n" +
	"\benum_map\x18P \x03(\v2\x1e.test.v1.AllTypes.EnumMapEntryR\aenumMap\x12%\n" +
	"\rdouble_option\x18Q \x01(\x01H\x00R\fdoubleOption\x12#\n" +
	"\ffloat_option\x18R \x01(\x02H\x00R\vfloatOption\x12#\n" +
	"\fint32_option\x18S \x01(\x05H\x00R\vint32Option\x12#\n" +
	"\fint64_option\x18T \x01(\x03H\x00R\vint64Option\x12%\n" +
	"\ruint32_option\x18U \x01(\rH\x00R\fuint32Option\x12%\n" +
	"\ruint64_option\x18V \x01(\x04H\x00R\fuint64Option\x12%\n" +
	"\rsint32_option\x18W \x01(\x11H\x00R\fsint32Option\x12%\n" +
	"\rsint64_option\x18X \x01(\x12H\x00R\fsint64Option\x12'\n" +
	"\x0efixed32_option\x18Y \x01(\aH\x00R\rfixed32Option\x12'\n" +
	"\x0efixed64_option\x18Z \x01(\x06H\x00R\rfixed64Option\x12)\n" +
	"\x0fsfixed32_option\x18[ \x01(\x0fH\x00R\x0esfixed32Option\x12)\n" +
	"\x0fsfixed64_option\x18\\ \x01(\x10H\x00R\x0esfixed64Option\x12!\n" +
	"\vbool_option\x18] \x01(\bH\x00R\n" +
	"boolOption\x12%\n" +
	"\rstring_option\x18^ \x01(\tH\x00R\fstringOption\x12#\n" +
	"\fbytes_option\x18_ \x01(\fH\x00R\vbytesOption\x122\n" +
	"\n" +
	"msg_option\x18` \x01(\v2\x11.test.v1.AllTypesH\x00R\tmsgOption\x129\n" +
	"\venum_option\x18a \x01(\x0e2\x16.test.v1.AllTypes.EnumH\x00R\n" +
	"enumOption\x1aC\n" +
	"\x15Int32ToStringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aC\n" +
	"\x15Int64ToStringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aD\n" +
	"\x16Uint32ToStringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aD\n" +
	"\x16Uint64ToStringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aD\n" +
	"\x16Sint32ToStringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x11R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aD\n" +
	"\x16Sint64ToStringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x12R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aE\n" +
	"\x17Fixed32ToStringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\aR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aE\n" +
	"\x17Fixed64ToStringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x06R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aF\n" +
	"\x18Sfixed32ToStringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x0fR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aF\n" +
	"\x18Sfixed64ToStringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x10R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aB\n" +
	"\x14BoolToStringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\bR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aD\n" +
	"\x16StringToStringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a<\n" +
	"\x0eDoubleMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\x1a;\n" +
	"\rFloatMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\x1a;\n" +
	"\rInt32MapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\x1a;\n" +
	"\rInt64MapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\x1a<\n" +
	"\x0eUint32MapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value:\x028\x01\x1a<\n" +
	"\x0eUint64MapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\x1a<\n" +
	"\x0eSint32MapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x11R\x05value:\x028\x01\x1a<\n" +
	"\x0eSint64MapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x12R\x05value:\x028\x01\x1a=\n" +
	"\x0fFixed32MapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\aR\x05value:\x028\x01\x1a=\n" +
	"\x0fFixed64MapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x06R\x05value:\x028\x01\x1a>\n" +
	"\x10Sfixed32MapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x0fR\x05value:\x028\x01\x1a>\n" +
	"\x10Sfixed64MapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x10R\x05value:\x028\x01\x1a:\n" +
	"\fBoolMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1a<\n" +
	"\x0eStringMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a;\n" +
	"\rBytesMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1aL\n" +
	"\vMsgMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12'\n" +
	"\x05value\x18\x02 \x01(\v2\x11.test.v1.AllTypesR\x05value:\x028\x01\x1aR\n" +
	"\fEnumMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\x0e2\x16.test.v1.AllTypes.EnumR\x05value:\x028\x01\"8\n" +
	"\x04Enum\x12\x14\n" +
	"\x10ENUM_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bENUM_ONE\x10\x01\x12\f\n" +
	"\bENUM_TWO\x10\x02B\b\n" +
	"\x06option\"\xd9\x03\n" +
	"\bEnumTest\x12?\n" +
	"\aenum_in\x18\x01 \x01(\x0e2\x1a.test.v1.EnumTest.TestEnumB\n" +
	"\xbaH\a\x82\x01\x04\x18\x02\x18\x03R\x06enumIn\x12F\n" +
	"\venum_not_in\x18\x02 \x01(\x0e2\x1a.test.v1.EnumTest.TestEnumB\n" +
	"\xbaH\a\x82\x01\x04 \x00 \x01R\tenumNotIn\x12T\n" +
	"\x12enum_in_and_not_in\x18\x03 \x01(\x0e2\x1a.test.v1.EnumTest.TestEnumB\f\xbaH\t\x82\x01\x06\x18\x01\x18\x02 \x02R\x0eenumInAndNotIn\x12C\n" +
	"\n" +
	"enum_const\x18\x04 \x01(\x0e2\x1a.test.v1.EnumTest.TestEnumB\b\xbaH\x05\x82\x01\x02\b\x03R\tenumConst\x12G\n" +
	"\renum_required\x18\x05 \x01(\x0e2\x1a.test.v1.EnumTest.TestEnumB\x06\xbaH\x03\xc8\x01\x01R\fenumRequired\"`\n" +
	"\bTestEnum\x12\x19\n" +
	"\x15TEST_ENUM_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rTEST_ENUM_ONE\x10\x01\x12\x11\n" +
	"\rTEST_ENUM_TWO\x10\x02\x12\x13\n" +
	"\x0fTEST_ENUM_THREE\x10\x03\"\xd3\x01\n" +
	"\x10RepeatedEnumTest\x12]\n" +
	"\x10repeated_enum_in\x18\x01 \x03(\x0e2\".test.v1.RepeatedEnumTest.TestEnumB\x0f\xbaH\f\x92\x01\t\"\a\x82\x01\x04\x18\x02\x18\x03R\x0erepeatedEnumIn\"`\n" +
	"\bTestEnum\x12\x19\n" +
	"\x15TEST_ENUM_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rTEST_ENUM_ONE\x10\x01\x12\x11\n" +
	"\rTEST_ENUM_TWO\x10\x02\x12\x13\n" +
	"\x0fTEST_ENUM_THREE\x10\x03B\x97\x01\n" +
	"\vcom.test.v1B\tTestProtoP\x01Z8github.com/sudorandom/fauxrpc/private/gen/test/v1;testv1\xa2\x02\x03TXX\xaa\x02\aTest.V1\xca\x02\aTest\\V1\xe2\x02\x13Test\\V1\\GPBMetadata\xea\x02\bTest::V1\x92\x03\x05\xd2>\x02\x10\x03b\beditionsp\xe8\a"

var file_test_v1_test_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_test_v1_test_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_test_v1_test_proto_goTypes = []any{
	(ParameterValues_Enum)(0),        // 0: test.v1.ParameterValues.Enum
	(ParameterValues_Nested_Enum)(0), // 1: test.v1.ParameterValues.Nested.Enum
	(AllTypes_Enum)(0),               // 2: test.v1.AllTypes.Enum
	(EnumTest_TestEnum)(0),           // 3: test.v1.EnumTest.TestEnum
	(RepeatedEnumTest_TestEnum)(0),   // 4: test.v1.RepeatedEnumTest.TestEnum
	(*ParameterValues)(nil),          // 5: test.v1.ParameterValues
	(*AllTypes)(nil),                 // 6: test.v1.AllTypes
	(*EnumTest)(nil),                 // 7: test.v1.EnumTest
	(*RepeatedEnumTest)(nil),         // 8: test.v1.RepeatedEnumTest
	(*ParameterValues_Nested)(nil),   // 9: test.v1.ParameterValues.Nested
	nil,                              // 10: test.v1.ParameterValues.StringMapEntry
	nil,                              // 11: test.v1.ParameterValues.StringValueMapEntry
	nil,                              // 12: test.v1.ParameterValues.EnumMapEntry
	nil,                              // 13: test.v1.ParameterValues.NestedMapEntry
	nil,                              // 14: test.v1.AllTypes.Int32ToStringMapEntry
	nil,                              // 15: test.v1.AllTypes.Int64ToStringMapEntry
	nil,                              // 16: test.v1.AllTypes.Uint32ToStringMapEntry
	nil,                              // 17: test.v1.AllTypes.Uint64ToStringMapEntry
	nil,                              // 18: test.v1.AllTypes.Sint32ToStringMapEntry
	nil,                              // 19: test.v1.AllTypes.Sint64ToStringMapEntry
	nil,                              // 20: test.v1.AllTypes.Fixed32ToStringMapEntry
	nil,                              // 21: test.v1.AllTypes.Fixed64ToStringMapEntry
	nil,                              // 22: test.v1.AllTypes.Sfixed32ToStringMapEntry
	nil,                              // 23: test.v1.AllTypes.Sfixed64ToStringMapEntry
	nil,                              // 24: test.v1.AllTypes.BoolToStringMapEntry
	nil,                              // 25: test.v1.AllTypes.StringToStringMapEntry
	nil,                              // 26: test.v1.AllTypes.DoubleMapEntry
	nil,                              // 27: test.v1.AllTypes.FloatMapEntry
	nil,                              // 28: test.v1.AllTypes.Int32MapEntry
	nil,                              // 29: test.v1.AllTypes.Int64MapEntry
	nil,                              // 30: test.v1.AllTypes.Uint32MapEntry
	nil,                              // 31: test.v1.AllTypes.Uint64MapEntry
	nil,                              // 32: test.v1.AllTypes.Sint32MapEntry
	nil,                              // 33: test.v1.AllTypes.Sint64MapEntry
	nil,                              // 34: test.v1.AllTypes.Fixed32MapEntry
	nil,                              // 35: test.v1.AllTypes.Fixed64MapEntry
	nil,                              // 36: test.v1.AllTypes.Sfixed32MapEntry
	nil,                              // 37: test.v1.AllTypes.Sfixed64MapEntry
	nil,                              // 38: test.v1.AllTypes.BoolMapEntry
	nil,                              // 39: test.v1.AllTypes.StringMapEntry
	nil,                              // 40: test.v1.AllTypes.BytesMapEntry
	nil,                              // 41: test.v1.AllTypes.MsgMapEntry
	nil,                              // 42: test.v1.AllTypes.EnumMapEntry
	(*timestamppb.Timestamp)(nil),    // 43: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),      // 44: google.protobuf.Duration
	(*wrapperspb.BoolValue)(nil),     // 45: google.protobuf.BoolValue
	(*wrapperspb.Int32Value)(nil),    // 46: google.protobuf.Int32Value
	(*wrapperspb.Int64Value)(nil),    // 47: google.protobuf.Int64Value
	(*wrapperspb.UInt32Value)(nil),   // 48: google.protobuf.UInt32Value
	(*wrapperspb.UInt64Value)(nil),   // 49: google.protobuf.UInt64Value
	(*wrapperspb.FloatValue)(nil),    // 50: google.protobuf.FloatValue
	(*wrapperspb.DoubleValue)(nil),   // 51: google.protobuf.DoubleValue
	(*wrapperspb.BytesValue)(nil),    // 52: google.protobuf.BytesValue
	(*wrapperspb.StringValue)(nil),   // 53: google.protobuf.StringValue
	(*fieldmaskpb.FieldMask)(nil),    // 54: google.protobuf.FieldMask
	(*structpb.Struct)(nil),          // 55: google.protobuf.Struct
	(*structpb.Value)(nil),           // 56: google.protobuf.Value
}
var file_test_v1_test_proto_depIdxs = []int32{
	43, // 0: test.v1.ParameterValues.timestamp:type_name -> google.protobuf.Timestamp
	44, // 1: test.v1.ParameterValues.duration:type_name -> google.protobuf.Duration
	45, // 2: test.v1.ParameterValues.bool_value_wrapper:type_name -> google.protobuf.BoolValue
	46, // 3: test.v1.ParameterValues.int32_value_wrapper:type_name -> google.protobuf.Int32Value
	47, // 4: test.v1.ParameterValues.int64_value_wrapper:type_name -> google.protobuf.Int64Value
	48, // 5: test.v1.ParameterValues.uint32_value_wrapper:type_name -> google.protobuf.UInt32Value
	49, // 6: test.v1.ParameterValues.uint64_value_wrapper:type_name -> google.protobuf.UInt64Value
	50, // 7: test.v1.ParameterValues.float_value_wrapper:type_name -> google.protobuf.FloatValue
	51, // 8: test.v1.ParameterValues.double_value_wrapper:type_name -> google.protobuf.DoubleValue
	52, // 9: test.v1.ParameterValues.bytes_value_wrapper:type_name -> google.protobuf.BytesValue
	53, // 10: test.v1.ParameterValues.string_value_wrapper:type_name -> google.protobuf.StringValue
	54, // 11: test.v1.ParameterValues.field_mask:type_name -> google.protobuf.FieldMask
	0,  // 12: test.v1.ParameterValues.enum_value:type_name -> test.v1.ParameterValues.Enum
	0,  // 13: test.v1.ParameterValues.enum_list:type_name -> test.v1.ParameterValues.Enum
	51, // 14: test.v1.ParameterValues.double_value_list:type_name -> google.protobuf.DoubleValue
	51, // 15: test.v1.ParameterValues.oneof_double_value_wrapper:type_name -> google.protobuf.DoubleValue
	0,  // 16: test.v1.ParameterValues.oneof_enum_value:type_name -> test.v1.ParameterValues.Enum
	9,  // 17: test.v1.ParameterValues.nested:type_name -> test.v1.ParameterValues.Nested
	5,  // 18: test.v1.ParameterValues.recursive:type_name -> test.v1.ParameterValues
	10, // 19: test.v1.ParameterValues.string_map:type_name -> test.v1.ParameterValues.StringMapEntry
	11, // 20: test.v1.ParameterValues.string_value_map:type_name -> test.v1.ParameterValues.StringValueMapEntry
	12, // 21: test.v1.ParameterValues.enum_map:type_name -> test.v1.ParameterValues.EnumMapEntry
	13, // 22: test.v1.ParameterValues.nested_map:type_name -> test.v1.ParameterValues.NestedMapEntry
	55, // 23: test.v1.ParameterValues.struct_value:type_name -> google.protobuf.Struct
	56, // 24: test.v1.ParameterValues.value:type_name -> google.protobuf.Value
	5,  // 25: test.v1.ParameterValues.recursive_list:type_name -> test.v1.ParameterValues
	14, // 26: test.v1.AllTypes.int32_to_string_map:type_name -> test.v1.AllTypes.Int32ToStringMapEntry
	15, // 27: test.v1.AllTypes.int64_to_string_map:type_name -> test.v1.AllTypes.Int64ToStringMapEntry
	16, // 28: test.v1.AllTypes.uint32_to_string_map:type_name -> test.v1.AllTypes.Uint32ToStringMapEntry
	17, // 29: test.v1.AllTypes.uint64_to_string_map:type_name -> test.v1.AllTypes.Uint64ToStringMapEntry
	18, // 30: test.v1.AllTypes.sint32_to_string_map:type_name -> test.v1.AllTypes.Sint32ToStringMapEntry
	19, // 31: test.v1.AllTypes.sint64_to_string_map:type_name -> test.v1.AllTypes.Sint64ToStringMapEntry
	20, // 32: test.v1.AllTypes.fixed32_to_string_map:type_name -> test.v1.AllTypes.Fixed32ToStringMapEntry
	21, // 33: test.v1.AllTypes.fixed64_to_string_map:type_name -> test.v1.AllTypes.Fixed64ToStringMapEntry
	22, // 34: test.v1.AllTypes.sfixed32_to_string_map:type_name -> test.v1.AllTypes.Sfixed32ToStringMapEntry
	23, // 35: test.v1.AllTypes.sfixed64_to_string_map:type_name -> test.v1.AllTypes.Sfixed64ToStringMapEntry
	24, // 36: test.v1.AllTypes.bool_to_string_map:type_name -> test.v1.AllTypes.BoolToStringMapEntry
	25, // 37: test.v1.AllTypes.string_to_string_map:type_name -> test.v1.AllTypes.StringToStringMapEntry
	26, // 38: test.v1.AllTypes.double_map:type_name -> test.v1.AllTypes.DoubleMapEntry
	27, // 39: test.v1.AllTypes.float_map:type_name -> test.v1.AllTypes.FloatMapEntry
	28, // 40: test.v1.AllTypes.int32_map:type_name -> test.v1.AllTypes.Int32MapEntry
	29, // 41: test.v1.AllTypes.int64_map:type_name -> test.v1.AllTypes.Int64MapEntry
	30, // 42: test.v1.AllTypes.uint32_map:type_name -> test.v1.AllTypes.Uint32MapEntry
	31, // 43: test.v1.AllTypes.uint64_map:type_name -> test.v1.AllTypes.Uint64MapEntry
	32, // 44: test.v1.AllTypes.sint32_map:type_name -> test.v1.AllTypes.Sint32MapEntry
	33, // 45: test.v1.AllTypes.sint64_map:type_name -> test.v1.AllTypes.Sint64MapEntry
	34, // 46: test.v1.AllTypes.fixed32_map:type_name -> test.v1.AllTypes.Fixed32MapEntry
	35, // 47: test.v1.AllTypes.fixed64_map:type_name -> test.v1.AllTypes.Fixed64MapEntry
	36, // 48: test.v1.AllTypes.sfixed32_map:type_name -> test.v1.AllTypes.Sfixed32MapEntry
	37, // 49: test.v1.AllTypes.sfixed64_map:type_name -> test.v1.AllTypes.Sfixed64MapEntry
	38, // 50: test.v1.AllTypes.bool_map:type_name -> test.v1.AllTypes.BoolMapEntry
	39, // 51: test.v1.AllTypes.string_map:type_name -> test.v1.AllTypes.StringMapEntry
	40, // 52: test.v1.AllTypes.bytes_map:type_name -> test.v1.AllTypes.BytesMapEntry
	6,  // 53: test.v1.AllTypes.msg_value:type_name -> test.v1.AllTypes
	2,  // 54: test.v1.AllTypes.enum_value:type_name -> test.v1.AllTypes.Enum
	6,  // 55: test.v1.AllTypes.opt_msg_value:type_name -> test.v1.AllTypes
	2,  // 56: test.v1.AllTypes.opt_enum_value:type_name -> test.v1.AllTypes.Enum
	6,  // 57: test.v1.AllTypes.msg_list:type_name -> test.v1.AllTypes
	2,  // 58: test.v1.AllTypes.enum_list:type_name -> test.v1.AllTypes.Enum
	41, // 59: test.v1.AllTypes.msg_map:type_name -> test.v1.AllTypes.MsgMapEntry
	42, // 60: test.v1.AllTypes.enum_map:type_name -> test.v1.AllTypes.EnumMapEntry
	6,  // 61: test.v1.AllTypes.msg_option:type_name -> test.v1.AllTypes
	2,  // 62: test.v1.AllTypes.enum_option:type_name -> test.v1.AllTypes.Enum
	3,  // 63: test.v1.EnumTest.enum_in:type_name -> test.v1.EnumTest.TestEnum
	3,  // 64: test.v1.EnumTest.enum_not_in:type_name -> test.v1.EnumTest.TestEnum
	3,  // 65: test.v1.EnumTest.enum_in_and_not_in:type_name -> test.v1.EnumTest.TestEnum
	3,  // 66: test.v1.EnumTest.enum_const:type_name -> test.v1.EnumTest.TestEnum
	3,  // 67: test.v1.EnumTest.enum_required:type_name -> test.v1.EnumTest.TestEnum
	4,  // 68: test.v1.RepeatedEnumTest.repeated_enum_in:type_name -> test.v1.RepeatedEnumTest.TestEnum
	51, // 69: test.v1.ParameterValues.Nested.double_value_wrapper:type_name -> google.protobuf.DoubleValue
	1,  // 70: test.v1.ParameterValues.Nested.enum_value:type_name -> test.v1.ParameterValues.Nested.Enum
	53, // 71: test.v1.ParameterValues.StringValueMapEntry.value:type_name -> google.protobuf.StringValue
	0,  // 72: test.v1.ParameterValues.EnumMapEntry.value:type_name -> test.v1.ParameterValues.Enum
	9,  // 73: test.v1.ParameterValues.NestedMapEntry.value:type_name -> test.v1.ParameterValues.Nested
	6,  // 74: test.v1.AllTypes.MsgMapEntry.value:type_name -> test.v1.AllTypes
	2,  // 75: test.v1.AllTypes.EnumMapEntry.value:type_name -> test.v1.AllTypes.Enum
	76, // [76:76] is the sub-list for method output_type
	76, // [76:76] is the sub-list for method input_type
	76, // [76:76] is the sub-list for extension type_name
	76, // [76:76] is the sub-list for extension extendee
	0,  // [0:76] is the sub-list for field type_name
}

func init() { file_test_v1_test_proto_init() }
func file_test_v1_test_proto_init() {
	if File_test_v1_test_proto != nil {
		return
	}
	file_test_v1_test_proto_msgTypes[0].OneofWrappers = []any{
		(*parameterValues_OneofDoubleValue)(nil),
		(*parameterValues_OneofDoubleValueWrapper)(nil),
		(*parameterValues_OneofEnumValue)(nil),
	}
	file_test_v1_test_proto_msgTypes[1].OneofWrappers = []any{
		(*allTypes_DoubleOption)(nil),
		(*allTypes_FloatOption)(nil),
		(*allTypes_Int32Option)(nil),
		(*allTypes_Int64Option)(nil),
		(*allTypes_Uint32Option)(nil),
		(*allTypes_Uint64Option)(nil),
		(*allTypes_Sint32Option)(nil),
		(*allTypes_Sint64Option)(nil),
		(*allTypes_Fixed32Option)(nil),
		(*allTypes_Fixed64Option)(nil),
		(*allTypes_Sfixed32Option)(nil),
		(*allTypes_Sfixed64Option)(nil),
		(*allTypes_BoolOption)(nil),
		(*allTypes_StringOption)(nil),
		(*allTypes_BytesOption)(nil),
		(*allTypes_MsgOption)(nil),
		(*allTypes_EnumOption)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_test_v1_test_proto_rawDesc), len(file_test_v1_test_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_test_v1_test_proto_goTypes,
		DependencyIndexes: file_test_v1_test_proto_depIdxs,
		EnumInfos:         file_test_v1_test_proto_enumTypes,
		MessageInfos:      file_test_v1_test_proto_msgTypes,
	}.Build()
	File_test_v1_test_proto = out.File
	file_test_v1_test_proto_goTypes = nil
	file_test_v1_test_proto_depIdxs = nil
}
